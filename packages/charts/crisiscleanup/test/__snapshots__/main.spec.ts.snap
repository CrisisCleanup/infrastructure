// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`CrisisCleanupChart: 'defaults' > api matches snapshot > defaults-api 1`] = `
[
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "wsgi",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "wsgi",
                "--workers=2",
                "--threads=4",
                "--worker-class=gthread",
                "--worker-tmp-dir=/worker-tmp",
                "--timeout=90",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "livenessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "name": "gunicorn",
              "ports": [
                {
                  "containerPort": 5000,
                },
              ],
              "readinessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "resources": {
                "limits": {
                  "cpu": "1800m",
                  "memory": "1200Mi",
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1200Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "startupProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "periodSeconds": 15,
              },
              "volumeMounts": [
                {
                  "mountPath": "/app/staticfiles",
                  "name": "staticfiles",
                },
                {
                  "mountPath": "/worker-tmp",
                  "name": "worker-tmp",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
          "volumes": [
            {
              "emptyDir": {},
              "name": "staticfiles",
            },
            {
              "emptyDir": {
                "medium": "Memory",
              },
              "name": "worker-tmp",
            },
          ],
        },
      },
    },
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-migrate",
      "namespace": "test",
    },
    "spec": {
      "activeDeadlineSeconds": 1800,
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-migrate-c8890c80",
            "component": "api-migrate",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "python",
                "manage.py",
                "migrate",
                "--noinput",
                "--verbosity=1",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "migrate",
              "resources": {
                "limits": {
                  "memory": "3072Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Never",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsGroup": 1000,
            "runAsNonRoot": true,
            "runAsUser": 1000,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 300,
        },
      },
      "ttlSecondsAfterFinished": 120,
    },
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-collectstatic",
      "namespace": "test",
    },
    "spec": {
      "activeDeadlineSeconds": 1800,
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-collectstatic-c871685d",
            "component": "api-static",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "python",
                "manage.py",
                "collectstatic",
                "--no-post-process",
                "--noinput",
                "--verbosity=2",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "collectstatic",
              "resources": {
                "limits": {
                  "memory": "3072Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "volumeMounts": [
                {
                  "mountPath": "/app/staticfiles",
                  "name": "staticfiles",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Never",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsGroup": 1000,
            "runAsNonRoot": true,
            "runAsUser": 1000,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 300,
          "volumes": [
            {
              "emptyDir": {},
              "name": "staticfiles",
            },
          ],
        },
      },
      "ttlSecondsAfterFinished": 120,
    },
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-service",
      "namespace": "test",
    },
    "spec": {
      "externalIPs": [],
      "ports": [
        {
          "port": 5000,
          "targetPort": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 3,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-api-wsgi",
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "asgi",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "asgi",
                "--workers=2",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "livenessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "name": "hypercorn",
              "ports": [
                {
                  "containerPort": 5000,
                },
              ],
              "readinessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "resources": {
                "limits": {
                  "cpu": "1500m",
                  "memory": "1024Mi",
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "startupProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "periodSeconds": 15,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "storage.k8s.io/v1",
    "kind": "StorageClass",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "rag-models",
      "namespace": "test",
    },
    "parameters": {
      "allowAutoIOPSPerGBIncrease": "true",
      "iops": "1000",
      "type": "io2",
    },
    "provisioner": "ebs.csi.aws.com",
    "volumeBindingMode": "WaitForFirstConsumer",
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-asgi-rag-service",
      "namespace": "test",
    },
    "spec": {
      "clusterIP": "None",
      "externalIPs": [],
      "ports": [
        {
          "name": "channels",
          "port": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-rag",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "podManagementPolicy": "OrderedReady",
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
        },
      },
      "serviceName": "crisiscleanup-api-asgi-asgi-rag-service",
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
          },
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchLabels": {
                      "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
                    },
                  },
                  "namespaces": [
                    "test",
                  ],
                  "topologyKey": "kubernetes.io/hostname",
                },
                {
                  "labelSelector": {
                    "matchLabels": {
                      "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
                    },
                  },
                  "namespaces": [
                    "test",
                  ],
                  "topologyKey": "topology.kubernetes.io/zone",
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "channelsworker",
                "rag-document",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "rag-channels",
              "resources": {
                "limits": {
                  "memory": "4096Mi",
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "volumeMounts": [
                {
                  "mountPath": "/ccu/nltk_data",
                  "name": "rag-volume",
                  "subPath": "nltk_data",
                },
                {
                  "mountPath": "/ccu/.cache/huggingface",
                  "name": "rag-volume",
                  "subPath": "hf_data",
                },
                {
                  "mountPath": "/ccu/.cache/matplotlib",
                  "name": "rag-volume",
                  "subPath": "mp_data",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "initContainers": [
            {
              "command": [
                "sh",
                "-x",
                "-c",
                "mkdir -p /ccu && chown -R 1000:1000 /ccu",
              ],
              "image": "public.ecr.aws/docker/library/busybox:stable",
              "imagePullPolicy": "IfNotPresent",
              "name": "host-mounts-init",
              "resources": {
                "limits": {
                  "cpu": "30m",
                  "memory": "50Mi",
                },
                "requests": {
                  "cpu": "20m",
                  "memory": "20Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 0,
                "runAsNonRoot": false,
                "runAsUser": 0,
              },
              "volumeMounts": [
                {
                  "mountPath": "/ccu/nltk_data",
                  "name": "rag-volume",
                  "subPath": "nltk_data",
                },
                {
                  "mountPath": "/ccu/.cache/huggingface",
                  "name": "rag-volume",
                  "subPath": "hf_data",
                },
                {
                  "mountPath": "/ccu/.cache/matplotlib",
                  "name": "rag-volume",
                  "subPath": "mp_data",
                },
              ],
            },
          ],
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
      "updateStrategy": {
        "rollingUpdate": {
          "partition": 0,
        },
        "type": "RollingUpdate",
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "rag-volume",
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce",
            ],
            "storageClassName": "rag-models",
          },
        },
      ],
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-rag-scaling-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 6,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 50,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 80,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "StatefulSet",
        "name": "crisiscleanup-api-asgi-rag",
      },
    },
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-service",
      "namespace": "test",
    },
    "spec": {
      "externalIPs": [],
      "ports": [
        {
          "port": 5000,
          "targetPort": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 2,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-api-asgi",
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "adminwebsocket",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-admin-websocket",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-admin-websocket-c879d9e4",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-admin-websocket-c879d9e4",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "adminwebsocket",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "adminwebsocket",
              "resources": {
                "limits": {
                  "memory": "250Mi",
                },
                "requests": {
                  "cpu": "3m",
                  "memory": "250Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`CrisisCleanupChart: 'defaults' > celery matches snapshot > defaults-celery 1`] = `
[
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celerybeat",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celerybeat",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celerybeat-c8500419",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celerybeat-c8500419",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celerybeat",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "celerybeat",
              "resources": {
                "limits": {
                  "memory": "400Mi",
                },
                "requests": {
                  "cpu": "20m",
                  "memory": "400Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celeryworker",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-celery",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-celery-c8528587",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-celery-c8528587",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celeryworker",
                "-Q",
                "celery",
                "--concurrency=2",
                "--hostname",
                "celery@%%h",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "celery",
              "resources": {
                "limits": {
                  "memory": "900Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "900Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-celery-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 2,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-celery-celery-celery",
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celeryworker",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-signal",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-signal-c80f507d",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-signal-c80f507d",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celeryworker",
                "-Q",
                "signal,phone,metrics",
                "--concurrency=2",
                "--hostname",
                "signal@%%h",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "signal",
              "resources": {
                "limits": {
                  "memory": "900Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "900Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-signal-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 2,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-celery-celery-signal",
      },
    },
  },
]
`;

exports[`CrisisCleanupChart: 'defaults' > config matches snapshot > defaults-config 1`] = `
[
  {
    "apiVersion": "v1",
    "data": {
      "CCU_API_URL": "https://api.local.crisiscleanup.io",
      "CCU_FORCE_DOCKER": "true",
      "CCU_NEWRELIC_DISABLE": "true",
      "CCU_WEB_URL": "https://local.crisiscleanup.io",
      "CELERY_ALWAYS_EAGER": "false",
      "CONNECT_INSTANCE_ID": "",
      "DJANGO_ACCOUNT_ALLOW_REGISTRATION": "true",
      "DJANGO_ALLOWED_HOSTS": "*",
      "DJANGO_CORS_ORIGIN_WHITELIST": "https://local.crisiscleanup.io,https://app.local.crisiscleanup.io",
      "DJANGO_CSRF_COOKIE_SECURE": "true",
      "DJANGO_CSRF_TRUSTED_ORIGINS": "https://local.crisiscleanup.io,https://app.local.crisiscleanup.io",
      "DJANGO_EMAIL_BACKEND": "django.core.mail.backends.dummy.EmailBackend",
      "DJANGO_SECURE_SSL_REDIRECT": "false",
      "DJANGO_SESSION_COOKIE_SECURE": "true",
      "DJANGO_SETTINGS_MODULE": "config.settings.local",
      "ELASTIC_SEARCH_HOST": "",
      "LANGCHAIN_ENDPOINT": "https://api.smith.langchain.com",
      "LANGCHAIN_PROJECT": "crisiscleanup-3-api",
      "LANGCHAIN_TRACING_V2": "false",
      "NEW_RELIC_CONFIG_FILE": "/app/newrelic.ini",
      "PHONE_CHECK_TIMEZONE": "true",
      "RAG_CHAT_MODEL": "gpt-4o",
      "RAG_DOCUMENT_EMBED_MODEL": "text-embedding-3-large",
      "RAG_QUERY_EMBED_MODEL": "text-embedding-3-small",
      "SENTRY_TRACE_EXCLUDE_URLS": "/,/health,/health/,/ws/health,/ws/health/,/version,/version/,/{var}health/,/{var}version/",
    },
    "immutable": false,
    "kind": "ConfigMap",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "config",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-config-api-config",
      "namespace": "test",
    },
  },
]
`;

exports[`CrisisCleanupChart: 'defaults' > crisiscleanup matches snapshot > defaults-crisiscleanup 1`] = `
[
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "annotations": {
        "alb.ingress.kubernetes.io/healthcheck-path": "/health",
        "alb.ingress.kubernetes.io/listen-ports": "[{\\"HTTP\\": 80}, {\\"HTTPS\\":443}]",
        "alb.ingress.kubernetes.io/load-balancer-attributes": "idle_timeout.timeout_seconds=120",
        "alb.ingress.kubernetes.io/scheme": "internet-facing",
        "alb.ingress.kubernetes.io/ssl-redirect": "443",
        "alb.ingress.kubernetes.io/target-group-attributes": "load_balancing.algorithm.type=least_outstanding_requests",
        "alb.ingress.kubernetes.io/target-type": "ip",
      },
      "labels": {
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-ingress-c8203526",
      "namespace": "test",
    },
    "spec": {
      "rules": [
        {
          "host": "api.test.crisiscleanup.io",
          "http": {
            "paths": [
              {
                "backend": {
                  "service": {
                    "name": "crisiscleanup-api-wsgi-service",
                    "port": {
                      "number": 5000,
                    },
                  },
                },
                "path": "/",
                "pathType": "Prefix",
              },
              {
                "backend": {
                  "service": {
                    "name": "crisiscleanup-api-asgi-service",
                    "port": {
                      "number": 5000,
                    },
                  },
                },
                "path": "/ws/",
                "pathType": "Prefix",
              },
            ],
          },
        },
      ],
    },
  },
]
`;

exports[`CrisisCleanupChart: 'defaults' > namespace matches snapshot > defaults-namespace 1`] = `
[
  {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": {
      "labels": {
        "app.kubernetes.io/part-of": "crisiscleanup",
        "elbv2.k8s.aws/pod-readiness-gate-inject": "enabled",
      },
      "name": "test",
      "namespace": "test",
    },
    "spec": {},
  },
]
`;

exports[`CrisisCleanupChart: 'with spread' > api matches snapshot > with spread-api 1`] = `
[
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "wsgi",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 4,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "wsgi",
                "--workers=2",
                "--threads=4",
                "--worker-class=gthread",
                "--worker-tmp-dir=/worker-tmp",
                "--timeout=90",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "livenessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "name": "gunicorn",
              "ports": [
                {
                  "containerPort": 5000,
                },
              ],
              "readinessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "resources": {
                "limits": {
                  "cpu": "1800m",
                  "memory": "1200Mi",
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1200Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "startupProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "periodSeconds": 15,
              },
              "volumeMounts": [
                {
                  "mountPath": "/app/staticfiles",
                  "name": "staticfiles",
                },
                {
                  "mountPath": "/worker-tmp",
                  "name": "worker-tmp",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
          "topologySpreadConstraints": [
            {
              "labelSelector": {
                "matchLabels": {
                  "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
                },
              },
              "maxSkew": 2,
              "topologyKey": "topology.kubernetes.io/zone",
              "whenUnsatisfiable": "ScheduleAnyway",
            },
          ],
          "volumes": [
            {
              "emptyDir": {},
              "name": "staticfiles",
            },
            {
              "emptyDir": {
                "medium": "Memory",
              },
              "name": "worker-tmp",
            },
          ],
        },
      },
    },
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-migrate",
      "namespace": "test",
    },
    "spec": {
      "activeDeadlineSeconds": 1800,
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-migrate-c8890c80",
            "component": "api-migrate",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "python",
                "manage.py",
                "migrate",
                "--noinput",
                "--verbosity=1",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "migrate",
              "resources": {
                "limits": {
                  "memory": "3072Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Never",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsGroup": 1000,
            "runAsNonRoot": true,
            "runAsUser": 1000,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 300,
        },
      },
      "ttlSecondsAfterFinished": 120,
    },
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-collectstatic",
      "namespace": "test",
    },
    "spec": {
      "activeDeadlineSeconds": 1800,
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-collectstatic-c871685d",
            "component": "api-static",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "python",
                "manage.py",
                "collectstatic",
                "--no-post-process",
                "--noinput",
                "--verbosity=2",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "collectstatic",
              "resources": {
                "limits": {
                  "memory": "3072Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "volumeMounts": [
                {
                  "mountPath": "/app/staticfiles",
                  "name": "staticfiles",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Never",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsGroup": 1000,
            "runAsNonRoot": true,
            "runAsUser": 1000,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 300,
          "volumes": [
            {
              "emptyDir": {},
              "name": "staticfiles",
            },
          ],
        },
      },
      "ttlSecondsAfterFinished": 120,
    },
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-service",
      "namespace": "test",
    },
    "spec": {
      "externalIPs": [],
      "ports": [
        {
          "port": 5000,
          "targetPort": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "policy/v1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "wsgipdb",
      "namespace": "test",
    },
    "spec": {
      "minAvailable": "35%",
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
        },
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "asgi",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 4,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "asgi",
                "--workers=2",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "livenessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "name": "hypercorn",
              "ports": [
                {
                  "containerPort": 5000,
                },
              ],
              "readinessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "resources": {
                "limits": {
                  "cpu": "1500m",
                  "memory": "1024Mi",
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "startupProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "periodSeconds": 15,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
          "topologySpreadConstraints": [
            {
              "labelSelector": {
                "matchLabels": {
                  "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
                },
              },
              "maxSkew": 2,
              "topologyKey": "topology.kubernetes.io/zone",
              "whenUnsatisfiable": "ScheduleAnyway",
            },
          ],
        },
      },
    },
  },
  {
    "apiVersion": "storage.k8s.io/v1",
    "kind": "StorageClass",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "rag-models",
      "namespace": "test",
    },
    "parameters": {
      "allowAutoIOPSPerGBIncrease": "true",
      "iops": "1000",
      "type": "io2",
    },
    "provisioner": "ebs.csi.aws.com",
    "volumeBindingMode": "WaitForFirstConsumer",
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-asgi-rag-service",
      "namespace": "test",
    },
    "spec": {
      "clusterIP": "None",
      "externalIPs": [],
      "ports": [
        {
          "name": "channels",
          "port": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-rag",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "podManagementPolicy": "OrderedReady",
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
        },
      },
      "serviceName": "crisiscleanup-api-asgi-asgi-rag-service",
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
          },
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchLabels": {
                      "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
                    },
                  },
                  "namespaces": [
                    "test",
                  ],
                  "topologyKey": "kubernetes.io/hostname",
                },
                {
                  "labelSelector": {
                    "matchLabels": {
                      "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
                    },
                  },
                  "namespaces": [
                    "test",
                  ],
                  "topologyKey": "topology.kubernetes.io/zone",
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "channelsworker",
                "rag-document",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "rag-channels",
              "resources": {
                "limits": {
                  "memory": "4096Mi",
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "volumeMounts": [
                {
                  "mountPath": "/ccu/nltk_data",
                  "name": "rag-volume",
                  "subPath": "nltk_data",
                },
                {
                  "mountPath": "/ccu/.cache/huggingface",
                  "name": "rag-volume",
                  "subPath": "hf_data",
                },
                {
                  "mountPath": "/ccu/.cache/matplotlib",
                  "name": "rag-volume",
                  "subPath": "mp_data",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "initContainers": [
            {
              "command": [
                "sh",
                "-x",
                "-c",
                "mkdir -p /ccu && chown -R 1000:1000 /ccu",
              ],
              "image": "public.ecr.aws/docker/library/busybox:stable",
              "imagePullPolicy": "IfNotPresent",
              "name": "host-mounts-init",
              "resources": {
                "limits": {
                  "cpu": "30m",
                  "memory": "50Mi",
                },
                "requests": {
                  "cpu": "20m",
                  "memory": "20Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 0,
                "runAsNonRoot": false,
                "runAsUser": 0,
              },
              "volumeMounts": [
                {
                  "mountPath": "/ccu/nltk_data",
                  "name": "rag-volume",
                  "subPath": "nltk_data",
                },
                {
                  "mountPath": "/ccu/.cache/huggingface",
                  "name": "rag-volume",
                  "subPath": "hf_data",
                },
                {
                  "mountPath": "/ccu/.cache/matplotlib",
                  "name": "rag-volume",
                  "subPath": "mp_data",
                },
              ],
            },
          ],
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
      "updateStrategy": {
        "rollingUpdate": {
          "partition": 0,
        },
        "type": "RollingUpdate",
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "rag-volume",
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce",
            ],
            "storageClassName": "rag-models",
          },
        },
      ],
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-rag-scaling-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 6,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 50,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 80,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "StatefulSet",
        "name": "crisiscleanup-api-asgi-rag",
      },
    },
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-service",
      "namespace": "test",
    },
    "spec": {
      "externalIPs": [],
      "ports": [
        {
          "port": 5000,
          "targetPort": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "policy/v1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "asgipdb",
      "namespace": "test",
    },
    "spec": {
      "minAvailable": "35%",
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
        },
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "adminwebsocket",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-admin-websocket",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-admin-websocket-c879d9e4",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-admin-websocket-c879d9e4",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "adminwebsocket",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "adminwebsocket",
              "resources": {
                "limits": {
                  "memory": "250Mi",
                },
                "requests": {
                  "cpu": "3m",
                  "memory": "250Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with spread' > celery matches snapshot > with spread-celery 1`] = `
[
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celerybeat",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celerybeat",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celerybeat-c8500419",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celerybeat-c8500419",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celerybeat",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "celerybeat",
              "resources": {
                "limits": {
                  "memory": "400Mi",
                },
                "requests": {
                  "cpu": "20m",
                  "memory": "400Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celeryworker",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-celery",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-celery-c8528587",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-celery-c8528587",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celeryworker",
                "-Q",
                "celery",
                "--concurrency=2",
                "--hostname",
                "celery@%%h",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "celery",
              "resources": {
                "limits": {
                  "memory": "900Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "900Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-celery-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 2,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-celery-celery-celery",
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celeryworker",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-signal",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-signal-c80f507d",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-signal-c80f507d",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celeryworker",
                "-Q",
                "signal,phone,metrics",
                "--concurrency=2",
                "--hostname",
                "signal@%%h",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "signal",
              "resources": {
                "limits": {
                  "memory": "900Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "900Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-signal-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 2,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-celery-celery-signal",
      },
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with spread' > config matches snapshot > with spread-config 1`] = `
[
  {
    "apiVersion": "v1",
    "data": {
      "CCU_API_URL": "https://api.local.crisiscleanup.io",
      "CCU_FORCE_DOCKER": "true",
      "CCU_NEWRELIC_DISABLE": "true",
      "CCU_WEB_URL": "https://local.crisiscleanup.io",
      "CELERY_ALWAYS_EAGER": "false",
      "CONNECT_INSTANCE_ID": "",
      "DJANGO_ACCOUNT_ALLOW_REGISTRATION": "true",
      "DJANGO_ALLOWED_HOSTS": "*",
      "DJANGO_CORS_ORIGIN_WHITELIST": "https://local.crisiscleanup.io,https://app.local.crisiscleanup.io",
      "DJANGO_CSRF_COOKIE_SECURE": "true",
      "DJANGO_CSRF_TRUSTED_ORIGINS": "https://local.crisiscleanup.io,https://app.local.crisiscleanup.io",
      "DJANGO_EMAIL_BACKEND": "django.core.mail.backends.dummy.EmailBackend",
      "DJANGO_SECURE_SSL_REDIRECT": "false",
      "DJANGO_SESSION_COOKIE_SECURE": "true",
      "DJANGO_SETTINGS_MODULE": "config.settings.local",
      "ELASTIC_SEARCH_HOST": "",
      "LANGCHAIN_ENDPOINT": "https://api.smith.langchain.com",
      "LANGCHAIN_PROJECT": "crisiscleanup-3-api",
      "LANGCHAIN_TRACING_V2": "false",
      "NEW_RELIC_CONFIG_FILE": "/app/newrelic.ini",
      "PHONE_CHECK_TIMEZONE": "true",
      "RAG_CHAT_MODEL": "gpt-4o",
      "RAG_DOCUMENT_EMBED_MODEL": "text-embedding-3-large",
      "RAG_QUERY_EMBED_MODEL": "text-embedding-3-small",
      "SENTRY_TRACE_EXCLUDE_URLS": "/,/health,/health/,/ws/health,/ws/health/,/version,/version/,/{var}health/,/{var}version/",
    },
    "immutable": false,
    "kind": "ConfigMap",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "config",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-config-api-config",
      "namespace": "test",
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with spread' > crisiscleanup matches snapshot > with spread-crisiscleanup 1`] = `
[
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "annotations": {
        "alb.ingress.kubernetes.io/healthcheck-path": "/health",
        "alb.ingress.kubernetes.io/listen-ports": "[{\\"HTTP\\": 80}, {\\"HTTPS\\":443}]",
        "alb.ingress.kubernetes.io/load-balancer-attributes": "idle_timeout.timeout_seconds=120",
        "alb.ingress.kubernetes.io/scheme": "internet-facing",
        "alb.ingress.kubernetes.io/ssl-redirect": "443",
        "alb.ingress.kubernetes.io/target-group-attributes": "load_balancing.algorithm.type=least_outstanding_requests",
        "alb.ingress.kubernetes.io/target-type": "ip",
      },
      "labels": {
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-ingress-c8203526",
      "namespace": "test",
    },
    "spec": {
      "rules": [
        {
          "host": "api.test.crisiscleanup.io",
          "http": {
            "paths": [
              {
                "backend": {
                  "service": {
                    "name": "crisiscleanup-api-wsgi-service",
                    "port": {
                      "number": 5000,
                    },
                  },
                },
                "path": "/",
                "pathType": "Prefix",
              },
              {
                "backend": {
                  "service": {
                    "name": "crisiscleanup-api-asgi-service",
                    "port": {
                      "number": 5000,
                    },
                  },
                },
                "path": "/ws/",
                "pathType": "Prefix",
              },
            ],
          },
        },
      ],
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with spread' > namespace matches snapshot > with spread-namespace 1`] = `
[
  {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": {
      "labels": {
        "app.kubernetes.io/part-of": "crisiscleanup",
        "elbv2.k8s.aws/pod-readiness-gate-inject": "enabled",
      },
      "name": "test",
      "namespace": "test",
    },
    "spec": {},
  },
]
`;

exports[`CrisisCleanupChart: 'with sync' > api matches snapshot > with sync-api 1`] = `
[
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "wsgi",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "wsgi",
                "--workers=2",
                "--threads=4",
                "--worker-class=gthread",
                "--worker-tmp-dir=/worker-tmp",
                "--timeout=90",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "livenessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "name": "gunicorn",
              "ports": [
                {
                  "containerPort": 5000,
                },
              ],
              "readinessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "resources": {
                "limits": {
                  "cpu": "1800m",
                  "memory": "1200Mi",
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1200Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "startupProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "periodSeconds": 15,
              },
              "volumeMounts": [
                {
                  "mountPath": "/app/staticfiles",
                  "name": "staticfiles",
                },
                {
                  "mountPath": "/worker-tmp",
                  "name": "worker-tmp",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
          "volumes": [
            {
              "emptyDir": {},
              "name": "staticfiles",
            },
            {
              "emptyDir": {
                "medium": "Memory",
              },
              "name": "worker-tmp",
            },
          ],
        },
      },
    },
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-migrate",
      "namespace": "test",
    },
    "spec": {
      "activeDeadlineSeconds": 1800,
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-migrate-c8890c80",
            "component": "api-migrate",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "python",
                "manage.py",
                "migrate",
                "--noinput",
                "--verbosity=1",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "migrate",
              "resources": {
                "limits": {
                  "memory": "3072Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Never",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsGroup": 1000,
            "runAsNonRoot": true,
            "runAsUser": 1000,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 300,
        },
      },
      "ttlSecondsAfterFinished": 120,
    },
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-collectstatic",
      "namespace": "test",
    },
    "spec": {
      "activeDeadlineSeconds": 1800,
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-collectstatic-c871685d",
            "component": "api-static",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "python",
                "manage.py",
                "collectstatic",
                "--no-post-process",
                "--noinput",
                "--verbosity=2",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "collectstatic",
              "resources": {
                "limits": {
                  "memory": "3072Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "volumeMounts": [
                {
                  "mountPath": "/app/staticfiles",
                  "name": "staticfiles",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Never",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsGroup": 1000,
            "runAsNonRoot": true,
            "runAsUser": 1000,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 300,
          "volumes": [
            {
              "emptyDir": {},
              "name": "staticfiles",
            },
          ],
        },
      },
      "ttlSecondsAfterFinished": 120,
    },
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-service",
      "namespace": "test",
    },
    "spec": {
      "externalIPs": [],
      "ports": [
        {
          "port": 5000,
          "targetPort": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 3,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-api-wsgi",
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "asgi",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "asgi",
                "--workers=2",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "livenessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "name": "hypercorn",
              "ports": [
                {
                  "containerPort": 5000,
                },
              ],
              "readinessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "resources": {
                "limits": {
                  "cpu": "1500m",
                  "memory": "1024Mi",
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "startupProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "periodSeconds": 15,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "storage.k8s.io/v1",
    "kind": "StorageClass",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "rag-models",
      "namespace": "test",
    },
    "parameters": {
      "allowAutoIOPSPerGBIncrease": "true",
      "iops": "1000",
      "type": "io2",
    },
    "provisioner": "ebs.csi.aws.com",
    "volumeBindingMode": "WaitForFirstConsumer",
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-asgi-rag-service",
      "namespace": "test",
    },
    "spec": {
      "clusterIP": "None",
      "externalIPs": [],
      "ports": [
        {
          "name": "channels",
          "port": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-rag",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "podManagementPolicy": "OrderedReady",
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
        },
      },
      "serviceName": "crisiscleanup-api-asgi-asgi-rag-service",
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
          },
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchLabels": {
                      "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
                    },
                  },
                  "namespaces": [
                    "test",
                  ],
                  "topologyKey": "kubernetes.io/hostname",
                },
                {
                  "labelSelector": {
                    "matchLabels": {
                      "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
                    },
                  },
                  "namespaces": [
                    "test",
                  ],
                  "topologyKey": "topology.kubernetes.io/zone",
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "channelsworker",
                "rag-document",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "rag-channels",
              "resources": {
                "limits": {
                  "memory": "4096Mi",
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "volumeMounts": [
                {
                  "mountPath": "/ccu/nltk_data",
                  "name": "rag-volume",
                  "subPath": "nltk_data",
                },
                {
                  "mountPath": "/ccu/.cache/huggingface",
                  "name": "rag-volume",
                  "subPath": "hf_data",
                },
                {
                  "mountPath": "/ccu/.cache/matplotlib",
                  "name": "rag-volume",
                  "subPath": "mp_data",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "initContainers": [
            {
              "command": [
                "sh",
                "-x",
                "-c",
                "mkdir -p /ccu && chown -R 1000:1000 /ccu",
              ],
              "image": "public.ecr.aws/docker/library/busybox:stable",
              "imagePullPolicy": "IfNotPresent",
              "name": "host-mounts-init",
              "resources": {
                "limits": {
                  "cpu": "30m",
                  "memory": "50Mi",
                },
                "requests": {
                  "cpu": "20m",
                  "memory": "20Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 0,
                "runAsNonRoot": false,
                "runAsUser": 0,
              },
              "volumeMounts": [
                {
                  "mountPath": "/ccu/nltk_data",
                  "name": "rag-volume",
                  "subPath": "nltk_data",
                },
                {
                  "mountPath": "/ccu/.cache/huggingface",
                  "name": "rag-volume",
                  "subPath": "hf_data",
                },
                {
                  "mountPath": "/ccu/.cache/matplotlib",
                  "name": "rag-volume",
                  "subPath": "mp_data",
                },
              ],
            },
          ],
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
      "updateStrategy": {
        "rollingUpdate": {
          "partition": 0,
        },
        "type": "RollingUpdate",
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "rag-volume",
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce",
            ],
            "storageClassName": "rag-models",
          },
        },
      ],
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-rag-scaling-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 6,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 50,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 80,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "StatefulSet",
        "name": "crisiscleanup-api-asgi-rag",
      },
    },
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-service",
      "namespace": "test",
    },
    "spec": {
      "externalIPs": [],
      "ports": [
        {
          "port": 5000,
          "targetPort": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 2,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-api-asgi",
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "adminwebsocket",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-admin-websocket",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-admin-websocket-c879d9e4",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-admin-websocket-c879d9e4",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "adminwebsocket",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "adminwebsocket",
              "resources": {
                "limits": {
                  "memory": "250Mi",
                },
                "requests": {
                  "cpu": "3m",
                  "memory": "250Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with sync' > celery matches snapshot > with sync-celery 1`] = `
[
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celerybeat",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celerybeat",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celerybeat-c8500419",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celerybeat-c8500419",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celerybeat",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "celerybeat",
              "resources": {
                "limits": {
                  "memory": "400Mi",
                },
                "requests": {
                  "cpu": "20m",
                  "memory": "400Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celeryworker",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-celery",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-celery-c8528587",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-celery-c8528587",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celeryworker",
                "-Q",
                "celery",
                "--concurrency=2",
                "--hostname",
                "celery@%%h",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "celery",
              "resources": {
                "limits": {
                  "memory": "900Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "900Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-celery-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 2,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-celery-celery-celery",
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celeryworker",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-signal",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-signal-c80f507d",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-signal-c80f507d",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celeryworker",
                "-Q",
                "signal,phone,metrics",
                "--concurrency=2",
                "--hostname",
                "signal@%%h",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "signal",
              "resources": {
                "limits": {
                  "memory": "900Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "900Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-signal-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 2,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-celery-celery-signal",
      },
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with sync' > config matches snapshot > with sync-config 1`] = `
[
  {
    "apiVersion": "v1",
    "data": {
      "CCU_API_URL": "https://api.local.crisiscleanup.io",
      "CCU_FORCE_DOCKER": "true",
      "CCU_NEWRELIC_DISABLE": "true",
      "CCU_WEB_URL": "https://local.crisiscleanup.io",
      "CELERY_ALWAYS_EAGER": "false",
      "CONNECT_INSTANCE_ID": "",
      "DJANGO_ACCOUNT_ALLOW_REGISTRATION": "true",
      "DJANGO_ALLOWED_HOSTS": "*",
      "DJANGO_CORS_ORIGIN_WHITELIST": "https://local.crisiscleanup.io,https://app.local.crisiscleanup.io",
      "DJANGO_CSRF_COOKIE_SECURE": "true",
      "DJANGO_CSRF_TRUSTED_ORIGINS": "https://local.crisiscleanup.io,https://app.local.crisiscleanup.io",
      "DJANGO_EMAIL_BACKEND": "django.core.mail.backends.dummy.EmailBackend",
      "DJANGO_SECURE_SSL_REDIRECT": "false",
      "DJANGO_SESSION_COOKIE_SECURE": "true",
      "DJANGO_SETTINGS_MODULE": "config.settings.local",
      "ELASTIC_SEARCH_HOST": "",
      "LANGCHAIN_ENDPOINT": "https://api.smith.langchain.com",
      "LANGCHAIN_PROJECT": "crisiscleanup-3-api",
      "LANGCHAIN_TRACING_V2": "false",
      "NEW_RELIC_CONFIG_FILE": "/app/newrelic.ini",
      "PHONE_CHECK_TIMEZONE": "true",
      "RAG_CHAT_MODEL": "gpt-4o",
      "RAG_DOCUMENT_EMBED_MODEL": "text-embedding-3-large",
      "RAG_QUERY_EMBED_MODEL": "text-embedding-3-small",
      "SENTRY_TRACE_EXCLUDE_URLS": "/,/health,/health/,/ws/health,/ws/health/,/version,/version/,/{var}health/,/{var}version/",
    },
    "immutable": false,
    "kind": "ConfigMap",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "config",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-config-api-config",
      "namespace": "test",
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with sync' > crisiscleanup matches snapshot > with sync-crisiscleanup 1`] = `
[
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "annotations": {
        "alb.ingress.kubernetes.io/healthcheck-path": "/health",
        "alb.ingress.kubernetes.io/listen-ports": "[{\\"HTTP\\": 80}, {\\"HTTPS\\":443}]",
        "alb.ingress.kubernetes.io/load-balancer-attributes": "idle_timeout.timeout_seconds=120",
        "alb.ingress.kubernetes.io/scheme": "internet-facing",
        "alb.ingress.kubernetes.io/ssl-redirect": "443",
        "alb.ingress.kubernetes.io/target-group-attributes": "load_balancing.algorithm.type=least_outstanding_requests",
        "alb.ingress.kubernetes.io/target-type": "ip",
      },
      "labels": {
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-ingress-c8203526",
      "namespace": "test",
    },
    "spec": {
      "rules": [
        {
          "host": "api.test.crisiscleanup.io",
          "http": {
            "paths": [
              {
                "backend": {
                  "service": {
                    "name": "crisiscleanup-api-wsgi-service",
                    "port": {
                      "number": 5000,
                    },
                  },
                },
                "path": "/",
                "pathType": "Prefix",
              },
              {
                "backend": {
                  "service": {
                    "name": "crisiscleanup-api-asgi-service",
                    "port": {
                      "number": 5000,
                    },
                  },
                },
                "path": "/ws/",
                "pathType": "Prefix",
              },
            ],
          },
        },
      ],
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with sync' > namespace matches snapshot > with sync-namespace 1`] = `
[
  {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": {
      "labels": {
        "app.kubernetes.io/part-of": "crisiscleanup",
        "elbv2.k8s.aws/pod-readiness-gate-inject": "enabled",
      },
      "name": "test",
      "namespace": "test",
    },
    "spec": {},
  },
]
`;

exports[`CrisisCleanupChart: 'with sync' > sync matches snapshot > with sync-sync 1`] = `
[
  {
    "apiVersion": "batch/v1",
    "kind": "CronJob",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "sync",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-sync-sync-job",
      "namespace": "test",
    },
    "spec": {
      "concurrencyPolicy": "Forbid",
      "failedJobsHistoryLimit": 1,
      "jobTemplate": {
        "spec": {
          "backoffLimit": 2,
          "template": {
            "metadata": {
              "labels": {
                "cdk8s.io/metadata.addr": "crisiscleanup-sync-sync-job-c86b8db7",
              },
            },
            "spec": {
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "args": [
                    "manage.py",
                    "pgsync_db",
                    "--config-path=/tmp/pg.yaml",
                    "--target-bastion=bastion.example.com",
                    "--target-bastion-key=some/path.pem",
                    "--target-dsn=postgres://myurl:5432/mydb",
                    "--dev",
                  ],
                  "command": [
                    "python",
                  ],
                  "image": "myrepo:synctag",
                  "imagePullPolicy": "Always",
                  "name": "sync",
                  "resources": {
                    "limits": {
                      "memory": "2048Mi",
                    },
                    "requests": {
                      "cpu": "2",
                      "memory": "1024Mi",
                    },
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsNonRoot": true,
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "config",
                    },
                  ],
                },
              ],
              "dnsPolicy": "ClusterFirst",
              "hostNetwork": false,
              "restartPolicy": "Never",
              "securityContext": {
                "fsGroupChangePolicy": "Always",
                "runAsNonRoot": true,
              },
              "setHostnameAsFQDN": false,
              "terminationGracePeriodSeconds": 30,
              "volumes": [
                {
                  "emptyDir": {
                    "medium": "Memory",
                  },
                  "name": "config",
                },
              ],
            },
          },
          "ttlSecondsAfterFinished": 7200,
        },
      },
      "schedule": "0 0 * * *",
      "startingDeadlineSeconds": 10,
      "successfulJobsHistoryLimit": 3,
      "suspend": false,
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with vertical scaling' > api matches snapshot > with vertical scaling-api 1`] = `
[
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "wsgi",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 4,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "wsgi",
                "--workers=2",
                "--threads=4",
                "--worker-class=gthread",
                "--worker-tmp-dir=/worker-tmp",
                "--timeout=90",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "livenessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "name": "gunicorn",
              "ports": [
                {
                  "containerPort": 5000,
                },
              ],
              "readinessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "resources": {
                "limits": {
                  "cpu": "1800m",
                  "memory": "1200Mi",
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1200Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "startupProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "periodSeconds": 15,
              },
              "volumeMounts": [
                {
                  "mountPath": "/app/staticfiles",
                  "name": "staticfiles",
                },
                {
                  "mountPath": "/worker-tmp",
                  "name": "worker-tmp",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
          "topologySpreadConstraints": [
            {
              "labelSelector": {
                "matchLabels": {
                  "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
                },
              },
              "maxSkew": 2,
              "topologyKey": "topology.kubernetes.io/zone",
              "whenUnsatisfiable": "ScheduleAnyway",
            },
          ],
          "volumes": [
            {
              "emptyDir": {},
              "name": "staticfiles",
            },
            {
              "emptyDir": {
                "medium": "Memory",
              },
              "name": "worker-tmp",
            },
          ],
        },
      },
    },
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-migrate",
      "namespace": "test",
    },
    "spec": {
      "activeDeadlineSeconds": 1800,
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-migrate-c8890c80",
            "component": "api-migrate",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "python",
                "manage.py",
                "migrate",
                "--noinput",
                "--verbosity=1",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "migrate",
              "resources": {
                "limits": {
                  "memory": "3072Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Never",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsGroup": 1000,
            "runAsNonRoot": true,
            "runAsUser": 1000,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 300,
        },
      },
      "ttlSecondsAfterFinished": 120,
    },
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-collectstatic",
      "namespace": "test",
    },
    "spec": {
      "activeDeadlineSeconds": 1800,
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-collectstatic-c871685d",
            "component": "api-static",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "python",
                "manage.py",
                "collectstatic",
                "--no-post-process",
                "--noinput",
                "--verbosity=2",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "collectstatic",
              "resources": {
                "limits": {
                  "memory": "3072Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "volumeMounts": [
                {
                  "mountPath": "/app/staticfiles",
                  "name": "staticfiles",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Never",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsGroup": 1000,
            "runAsNonRoot": true,
            "runAsUser": 1000,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 300,
          "volumes": [
            {
              "emptyDir": {},
              "name": "staticfiles",
            },
          ],
        },
      },
      "ttlSecondsAfterFinished": 120,
    },
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-service",
      "namespace": "test",
    },
    "spec": {
      "externalIPs": [],
      "ports": [
        {
          "port": 5000,
          "targetPort": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "autoscaling.k8s.io/v1",
    "kind": "VerticalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-wsgi-vpa",
      "namespace": "test",
    },
    "spec": {
      "resourcePolicy": {
        "containerPolicies": [
          {
            "containerName": "*",
            "maxAllowed": {
              "cpu": "3",
              "memory": "3072Mi",
            },
            "minAllowed": {
              "cpu": "500m",
              "memory": "1200Mi",
            },
          },
        ],
      },
      "targetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-api-wsgi",
      },
      "updatePolicy": {
        "updateMode": "Auto",
      },
    },
  },
  {
    "apiVersion": "policy/v1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "wsgipdb",
      "namespace": "test",
    },
    "spec": {
      "minAvailable": "35%",
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-wsgi-c83e828d",
        },
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "asgi",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 4,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "asgi",
                "--workers=2",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "livenessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "name": "hypercorn",
              "ports": [
                {
                  "containerPort": 5000,
                },
              ],
              "readinessProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
                "timeoutSeconds": 8,
              },
              "resources": {
                "limits": {
                  "cpu": "1500m",
                  "memory": "1024Mi",
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "startupProbe": {
                "failureThreshold": 30,
                "httpGet": {
                  "path": "/ws/health",
                  "port": 5000,
                  "scheme": "HTTP",
                },
                "periodSeconds": 15,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
          "topologySpreadConstraints": [
            {
              "labelSelector": {
                "matchLabels": {
                  "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
                },
              },
              "maxSkew": 2,
              "topologyKey": "topology.kubernetes.io/zone",
              "whenUnsatisfiable": "ScheduleAnyway",
            },
          ],
        },
      },
    },
  },
  {
    "apiVersion": "storage.k8s.io/v1",
    "kind": "StorageClass",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "rag-models",
      "namespace": "test",
    },
    "parameters": {
      "allowAutoIOPSPerGBIncrease": "true",
      "iops": "1000",
      "type": "io2",
    },
    "provisioner": "ebs.csi.aws.com",
    "volumeBindingMode": "WaitForFirstConsumer",
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-asgi-rag-service",
      "namespace": "test",
    },
    "spec": {
      "clusterIP": "None",
      "externalIPs": [],
      "ports": [
        {
          "name": "channels",
          "port": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-rag",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "podManagementPolicy": "OrderedReady",
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
        },
      },
      "serviceName": "crisiscleanup-api-asgi-asgi-rag-service",
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
          },
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchLabels": {
                      "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
                    },
                  },
                  "namespaces": [
                    "test",
                  ],
                  "topologyKey": "kubernetes.io/hostname",
                },
                {
                  "labelSelector": {
                    "matchLabels": {
                      "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-rag-c86cf6a6",
                    },
                  },
                  "namespaces": [
                    "test",
                  ],
                  "topologyKey": "topology.kubernetes.io/zone",
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "channelsworker",
                "rag-document",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "rag-channels",
              "resources": {
                "limits": {
                  "memory": "4096Mi",
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "1024Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "volumeMounts": [
                {
                  "mountPath": "/ccu/nltk_data",
                  "name": "rag-volume",
                  "subPath": "nltk_data",
                },
                {
                  "mountPath": "/ccu/.cache/huggingface",
                  "name": "rag-volume",
                  "subPath": "hf_data",
                },
                {
                  "mountPath": "/ccu/.cache/matplotlib",
                  "name": "rag-volume",
                  "subPath": "mp_data",
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "initContainers": [
            {
              "command": [
                "sh",
                "-x",
                "-c",
                "mkdir -p /ccu && chown -R 1000:1000 /ccu",
              ],
              "image": "public.ecr.aws/docker/library/busybox:stable",
              "imagePullPolicy": "IfNotPresent",
              "name": "host-mounts-init",
              "resources": {
                "limits": {
                  "cpu": "30m",
                  "memory": "50Mi",
                },
                "requests": {
                  "cpu": "20m",
                  "memory": "20Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 0,
                "runAsNonRoot": false,
                "runAsUser": 0,
              },
              "volumeMounts": [
                {
                  "mountPath": "/ccu/nltk_data",
                  "name": "rag-volume",
                  "subPath": "nltk_data",
                },
                {
                  "mountPath": "/ccu/.cache/huggingface",
                  "name": "rag-volume",
                  "subPath": "hf_data",
                },
                {
                  "mountPath": "/ccu/.cache/matplotlib",
                  "name": "rag-volume",
                  "subPath": "mp_data",
                },
              ],
            },
          ],
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
      "updateStrategy": {
        "rollingUpdate": {
          "partition": 0,
        },
        "type": "RollingUpdate",
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "rag-volume",
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce",
            ],
            "storageClassName": "rag-models",
          },
        },
      ],
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-rag-scaling-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 6,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 50,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 80,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "StatefulSet",
        "name": "crisiscleanup-api-asgi-rag",
      },
    },
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-service",
      "namespace": "test",
    },
    "spec": {
      "externalIPs": [],
      "ports": [
        {
          "port": 5000,
          "targetPort": 5000,
        },
      ],
      "selector": {
        "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
      },
      "type": "ClusterIP",
    },
  },
  {
    "apiVersion": "autoscaling.k8s.io/v1",
    "kind": "VerticalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-asgi-vpa",
      "namespace": "test",
    },
    "spec": {
      "targetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-api-asgi",
      },
      "updatePolicy": {
        "updateMode": "Auto",
      },
    },
  },
  {
    "apiVersion": "policy/v1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "asgipdb",
      "namespace": "test",
    },
    "spec": {
      "minAvailable": "35%",
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-asgi-c818ff7e",
        },
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/name": "adminwebsocket",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-api-admin-websocket",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-api-admin-websocket-c879d9e4",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-api-admin-websocket-c879d9e4",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "adminwebsocket",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "adminwebsocket",
              "resources": {
                "limits": {
                  "memory": "250Mi",
                },
                "requests": {
                  "cpu": "3m",
                  "memory": "250Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with vertical scaling' > celery matches snapshot > with vertical scaling-celery 1`] = `
[
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celerybeat",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celerybeat",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celerybeat-c8500419",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celerybeat-c8500419",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celerybeat",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "celerybeat",
              "resources": {
                "limits": {
                  "memory": "400Mi",
                },
                "requests": {
                  "cpu": "20m",
                  "memory": "400Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celeryworker",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-celery",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-celery-c8528587",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-celery-c8528587",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celeryworker",
                "-Q",
                "celery",
                "--concurrency=2",
                "--hostname",
                "celery@%%h",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "celery",
              "resources": {
                "limits": {
                  "memory": "900Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "900Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-celery-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 2,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-celery-celery-celery",
      },
    },
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/name": "celeryworker",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-signal",
      "namespace": "test",
    },
    "spec": {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "selector": {
        "matchLabels": {
          "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-signal-c80f507d",
        },
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": {
        "metadata": {
          "labels": {
            "cdk8s.io/metadata.addr": "crisiscleanup-celery-celery-signal-c80f507d",
          },
        },
        "spec": {
          "automountServiceAccountToken": false,
          "containers": [
            {
              "command": [
                "/serve.sh",
                "celeryworker",
                "-Q",
                "signal,phone,metrics",
                "--concurrency=2",
                "--hostname",
                "signal@%%h",
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "crisiscleanup-config-api-config",
                  },
                },
              ],
              "image": "test-api:test",
              "imagePullPolicy": "Always",
              "name": "signal",
              "resources": {
                "limits": {
                  "memory": "900Mi",
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "900Mi",
                },
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  {
    "apiVersion": "autoscaling/v2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "task-queue",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-celery-celery-signal-hpa",
      "namespace": "test",
    },
    "spec": {
      "behavior": {
        "scaleDown": {
          "policies": [
            {
              "periodSeconds": 300,
              "type": "Pods",
              "value": 1,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 300,
        },
        "scaleUp": {
          "policies": [
            {
              "periodSeconds": 60,
              "type": "Pods",
              "value": 4,
            },
            {
              "periodSeconds": 60,
              "type": "Percent",
              "value": 200,
            },
          ],
          "selectPolicy": "Max",
          "stabilizationWindowSeconds": 0,
        },
      },
      "maxReplicas": 2,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 70,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
        {
          "resource": {
            "name": "memory",
            "target": {
              "averageUtilization": 85,
              "type": "Utilization",
            },
          },
          "type": "Resource",
        },
      ],
      "minReplicas": 1,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "crisiscleanup-celery-celery-signal",
      },
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with vertical scaling' > config matches snapshot > with vertical scaling-config 1`] = `
[
  {
    "apiVersion": "v1",
    "data": {
      "CCU_API_URL": "https://api.local.crisiscleanup.io",
      "CCU_FORCE_DOCKER": "true",
      "CCU_NEWRELIC_DISABLE": "true",
      "CCU_WEB_URL": "https://local.crisiscleanup.io",
      "CELERY_ALWAYS_EAGER": "false",
      "CONNECT_INSTANCE_ID": "",
      "DJANGO_ACCOUNT_ALLOW_REGISTRATION": "true",
      "DJANGO_ALLOWED_HOSTS": "*",
      "DJANGO_CORS_ORIGIN_WHITELIST": "https://local.crisiscleanup.io,https://app.local.crisiscleanup.io",
      "DJANGO_CSRF_COOKIE_SECURE": "true",
      "DJANGO_CSRF_TRUSTED_ORIGINS": "https://local.crisiscleanup.io,https://app.local.crisiscleanup.io",
      "DJANGO_EMAIL_BACKEND": "django.core.mail.backends.dummy.EmailBackend",
      "DJANGO_SECURE_SSL_REDIRECT": "false",
      "DJANGO_SESSION_COOKIE_SECURE": "true",
      "DJANGO_SETTINGS_MODULE": "config.settings.local",
      "ELASTIC_SEARCH_HOST": "",
      "LANGCHAIN_ENDPOINT": "https://api.smith.langchain.com",
      "LANGCHAIN_PROJECT": "crisiscleanup-3-api",
      "LANGCHAIN_TRACING_V2": "false",
      "NEW_RELIC_CONFIG_FILE": "/app/newrelic.ini",
      "PHONE_CHECK_TIMEZONE": "true",
      "RAG_CHAT_MODEL": "gpt-4o",
      "RAG_DOCUMENT_EMBED_MODEL": "text-embedding-3-large",
      "RAG_QUERY_EMBED_MODEL": "text-embedding-3-small",
      "SENTRY_TRACE_EXCLUDE_URLS": "/,/health,/health/,/ws/health,/ws/health/,/version,/version/,/{var}health/,/{var}version/",
    },
    "immutable": false,
    "kind": "ConfigMap",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "config",
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-config-api-config",
      "namespace": "test",
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with vertical scaling' > crisiscleanup matches snapshot > with vertical scaling-crisiscleanup 1`] = `
[
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "annotations": {
        "alb.ingress.kubernetes.io/healthcheck-path": "/health",
        "alb.ingress.kubernetes.io/listen-ports": "[{\\"HTTP\\": 80}, {\\"HTTPS\\":443}]",
        "alb.ingress.kubernetes.io/load-balancer-attributes": "idle_timeout.timeout_seconds=120",
        "alb.ingress.kubernetes.io/scheme": "internet-facing",
        "alb.ingress.kubernetes.io/ssl-redirect": "443",
        "alb.ingress.kubernetes.io/target-group-attributes": "load_balancing.algorithm.type=least_outstanding_requests",
        "alb.ingress.kubernetes.io/target-type": "ip",
      },
      "labels": {
        "app.kubernetes.io/part-of": "crisiscleanup",
      },
      "name": "crisiscleanup-ingress-c8203526",
      "namespace": "test",
    },
    "spec": {
      "rules": [
        {
          "host": "api.test.crisiscleanup.io",
          "http": {
            "paths": [
              {
                "backend": {
                  "service": {
                    "name": "crisiscleanup-api-wsgi-service",
                    "port": {
                      "number": 5000,
                    },
                  },
                },
                "path": "/",
                "pathType": "Prefix",
              },
              {
                "backend": {
                  "service": {
                    "name": "crisiscleanup-api-asgi-service",
                    "port": {
                      "number": 5000,
                    },
                  },
                },
                "path": "/ws/",
                "pathType": "Prefix",
              },
            ],
          },
        },
      ],
    },
  },
]
`;

exports[`CrisisCleanupChart: 'with vertical scaling' > namespace matches snapshot > with vertical scaling-namespace 1`] = `
[
  {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": {
      "labels": {
        "app.kubernetes.io/part-of": "crisiscleanup",
        "elbv2.k8s.aws/pod-readiness-gate-inject": "enabled",
      },
      "name": "test",
      "namespace": "test",
    },
    "spec": {},
  },
]
`;
