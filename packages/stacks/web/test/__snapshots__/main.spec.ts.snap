// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`CrisisCleanupWeb > renders expected template 1`] = `
{
  "Mappings": {
    "AWSCloudFrontPartitionHostedZoneIdMap": {
      "aws": {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Outputs": {
    "testcrisiscleanupsiteccuwebstaticsiteDistributionDomainName6D8D4B3E": {
      "Value": {
        "Fn::GetAtt": [
          "testcrisiscleanupsiteccuwebstaticsiteCloudfrontDistribution0529F417",
          "DomainName",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C2048MiB8AA4A604": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C2048MiBServiceRoleDefaultPolicy5D765796",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C2048MiBServiceRoleB37F9ACF",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123-us-east-1",
          "S3Key": "9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "testcrisiscleanupsiteccuwebstaticsiteWebsiteDeploymentAwsCliLayer89EBEB24",
          },
        ],
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C2048MiBServiceRoleB37F9ACF",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C2048MiBServiceRoleB37F9ACF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C2048MiBServiceRoleDefaultPolicy5D765796": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-123-us-east-1",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-123-us-east-1/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C2048MiBServiceRoleDefaultPolicy5D765796",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C2048MiBServiceRoleB37F9ACF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123-us-east-1",
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testcrisiscleanupsitealiasrecordC0AB2C54": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "testcrisiscleanupsiteccuwebstaticsiteCloudfrontDistribution0529F417",
              "DomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "Comment": "CCU Web",
        "HostedZoneId": "DUMMY",
        "Name": "app.test.example.org.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucketAutoDeleteObjectsCustomResourceDE5827A1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucketPolicy1AF98EDA",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucketPolicy1AF98EDA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": "123",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE",
                        "Arn",
                      ],
                    },
                    "/website-access-logs*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketBABD1942",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": "123",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE",
                        "Arn",
                      ],
                    },
                    "/distribution-access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testcrisiscleanupsiteccuwebstaticsiteCloudfrontDistribution0529F417": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "app.test.example.org",
          ],
          "Comment": "CrisisCleanup Site",
          "CustomErrorResponses": [
            {
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
            {
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
          ],
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "testcrisiscleanupsitetestcrisiscleanupsiteccuwebstaticsiteCloudfrontDistributionOrigin1373BB693",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": [
                "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketBABD1942",
                "RegionalDomainName",
              ],
            },
          },
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
                  "RegionalDomainName",
                ],
              },
              "Id": "testcrisiscleanupsitetestcrisiscleanupsiteccuwebstaticsiteCloudfrontDistributionOrigin1373BB693",
              "OriginAccessControlId": {
                "Fn::GetAtt": [
                  "testcrisiscleanupsiteccuwebstaticsiteCloudfrontDistributionOrigin1S3OriginAccessControl45B01AA5",
                  "Id",
                ],
              },
              "S3OriginConfig": {
                "OriginAccessIdentity": "",
              },
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Ref": "testcrisiscleanupsitecertificate7F632B9C",
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
          "WebACLId": {
            "Fn::GetAtt": [
              "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCFAclCustomResource90064E99",
              "WebAclArn",
            ],
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "testcrisiscleanupsiteccuwebstaticsiteCloudfrontDistributionOrigin1S3OriginAccessControl45B01AA5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "OriginAccessControlConfig": {
          "Name": "testcrisiscleanupsitetestcriOrigin1S3OriginAccessControlEA18A762",
          "OriginAccessControlOriginType": "s3",
          "SigningBehavior": "always",
          "SigningProtocol": "sigv4",
        },
      },
      "Type": "AWS::CloudFront::OriginAccessControl",
    },
    "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketAutoDeleteObjectsCustomResource5C3075A7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketPolicy2687F2D0",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketBABD1942",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketBABD1942": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE",
          },
          "LogFilePrefix": "distribution-access-logs",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketPolicy2687F2D0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketBABD1942",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketBABD1942",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketBABD1942",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketBABD1942",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testcrisiscleanupsiteccuwebstaticsiteDistributionLogBucketBABD1942",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCFAclCustomResource90064E99": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "ID": "test-crisiscleanup-site-WebsiteAcl-2571",
        "MANAGED_RULES": [
          {
            "name": "AWSManagedRulesCommonRuleSet",
            "vendor": "AWS",
          },
        ],
        "ServiceToken": {
          "Fn::GetAtt": [
            "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontAclProviderframeworkonEvent5CF5B23B",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontAclProviderframeworkonEvent5CF5B23B": {
      "DependsOn": [
        "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclProviderRoleDefaultPolicy0408253F",
        "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclProviderRoleBF6C35BE",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the Provider construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the Provider construct accordingly.",
            },
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123-us-east-1",
          "S3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test-crisiscleanup-site/test-crisiscleanup-site-ccu-web-static-site/WebsiteAcl/CloudfrontAclProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclOnEventHandler346D04DF",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclOnEventHandler346D04DF",
              },
              "-Provider",
            ],
          ],
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclProviderRoleBF6C35BE",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclOnEventHandler346D04DF": {
      "DependsOn": [
        "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclOnEventHandlerRole1E1949F7",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123-us-east-1",
          "S3Key": "cfca3f6728adcd292c9c8a562487764efa23d14a0ccbc597a9f4dd7f242b3848.zip",
        },
        "FunctionName": "test-crisiscleanup-site-AclEvent-402571",
        "Handler": "index.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclOnEventHandlerRole1E1949F7",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclProviderRoleBF6C35BE": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Cloudwatch resources have been scoped down to the LogGroup level, however * is still needed as stream names are created just in time.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Cloudwatch resources have been scoped down to the LogGroup level, however * is still needed as stream names are created just in time.",
            },
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:logs:us-east-1:123:log-group:/aws/lambda/",
                          {
                            "Ref": "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclOnEventHandler346D04DF",
                          },
                          "-Provider",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:logs:us-east-1:123:log-group:/aws/lambda/",
                          {
                            "Ref": "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclOnEventHandler346D04DF",
                          },
                          "-Provider:*",
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "logs",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclProviderRoleDefaultPolicy0408253F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Cloudwatch resources have been scoped down to the LogGroup level, however * is still needed as stream names are created just in time.",
            },
            {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Cloudwatch resources have been scoped down to the LogGroup level, however * is still needed as stream names are created just in time.",
            },
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclOnEventHandler346D04DF",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclOnEventHandler346D04DF",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclOnEventHandler346D04DF",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclProviderRoleDefaultPolicy0408253F",
        "Roles": [
          {
            "Ref": "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclCloudfrontWebAclProviderRoleBF6C35BE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testcrisiscleanupsiteccuwebstaticsiteWebsiteAclOnEventHandlerRole1E1949F7": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:aws:wafv2:us-east-1:(<AWS::AccountId>|123):global/(.*)$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "WafV2 resources have been scoped down to the ACL/IPSet level, however * is still needed as resource id's are created just in time.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:aws:logs:(<AWS::Region>|us-east-1):(<AWS::AccountId>|123):log-group:/aws/lambda/test-crisiscleanup-site-AclEvent-402571:*/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Cloudwatch resources have been scoped down to the LogGroup level, however * is still needed as stream names are created just in time.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:aws:wafv2:us-east-1:(<AWS::AccountId>|123):global/(.*)$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "WafV2 resources have been scoped down to the ACL/IPSet level, however * is still needed as resource id's are created just in time.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::arn:aws:logs:(<AWS::Region>|us-east-1):(<AWS::AccountId>|123):log-group:/aws/lambda/test-crisiscleanup-site-AclEvent-402571:*/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Cloudwatch resources have been scoped down to the LogGroup level, however * is still needed as stream names are created just in time.",
            },
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:logs:us-east-1:123:log-group:/aws/lambda/test-crisiscleanup-site-AclEvent-402571",
                    "arn:aws:logs:us-east-1:123:log-group:/aws/lambda/test-crisiscleanup-site-AclEvent-402571:*",
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "logs",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "wafv2:CreateWebACL",
                    "wafv2:DeleteWebACL",
                    "wafv2:UpdateWebACL",
                    "wafv2:GetWebACL",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:wafv2:us-east-1:123:global/ipset/test-crisiscleanup-site-WebsiteAcl-2571-IPSet/*",
                    "arn:aws:wafv2:us-east-1:123:global/webacl/test-crisiscleanup-site-WebsiteAcl-2571/*",
                    "arn:aws:wafv2:us-east-1:123:global/managedruleset/*/*",
                  ],
                },
                {
                  "Action": [
                    "wafv2:CreateIPSet",
                    "wafv2:DeleteIPSet",
                    "wafv2:UpdateIPSet",
                    "wafv2:GetIPSet",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:wafv2:us-east-1:123:global/ipset/test-crisiscleanup-site-WebsiteAcl-2571-IPSet/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "wafv2",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketAutoDeleteObjectsCustomResourceD59F5911": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketPolicy9B8E4773",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketName": {
          "Ref": "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "testcrisiscleanupsiteccuwebstaticsiteAccessLogsBucket81E7A8CE",
          },
          "LogFilePrefix": "website-access-logs",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:8a0b6574",
            "Value": "true",
          },
        ],
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketPolicy9B8E4773": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetObject",
              "Condition": {
                "StringEquals": {
                  "AWS:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":cloudfront::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":distribution/",
                        {
                          "Ref": "testcrisiscleanupsiteccuwebstaticsiteCloudfrontDistribution0529F417",
                        },
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudfront.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testcrisiscleanupsiteccuwebstaticsiteWebsiteDeploymentAwsCliLayer89EBEB24": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "Content": {
          "S3Bucket": "cdk-hnb659fds-assets-123-us-east-1",
          "S3Key": "2e8ea9d657c30715826b809f41d1f2482ff4e16f37385f55fbcf7d8ccfdd14db.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "testcrisiscleanupsiteccuwebstaticsiteWebsiteDeploymentCustomResource2048MiBF1551DE9": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "id": "AwsPrototyping-LambdaLatestVersion",
              "reason": "Latest runtime cannot be configured. CDK will need to upgrade the BucketDeployment construct accordingly.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Action::s3:.*$/g",
                },
                {
                  "regex": "/^Resource::.*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "All Policies have been scoped to a Bucket. Given Buckets can contain arbitrary content, wildcard resources with bucket scope are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Buckets can contain arbitrary content, therefore wildcard resources under a bucket are required.",
            },
            {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": {
        "DestinationBucketName": {
          "Ref": "testcrisiscleanupsiteccuwebstaticsiteWebsiteBucketE5ED7528",
        },
        "DistributionId": {
          "Ref": "testcrisiscleanupsiteccuwebstaticsiteCloudfrontDistribution0529F417",
        },
        "OutputObjectKeys": true,
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C2048MiB8AA4A604",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          "cdk-hnb659fds-assets-123-us-east-1",
        ],
        "SourceObjectKeys": [
          "1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "testcrisiscleanupsitecertificate7F632B9C": {
      "Properties": {
        "DomainName": "test.example.org",
        "DomainValidationOptions": [
          {
            "DomainName": "test.example.org",
            "HostedZoneId": "DUMMY",
          },
          {
            "DomainName": "app.test.example.org",
            "HostedZoneId": "DUMMY",
          },
        ],
        "SubjectAlternativeNames": [
          "app.test.example.org",
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-crisiscleanup-site/test-crisiscleanup-site-certificate",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
