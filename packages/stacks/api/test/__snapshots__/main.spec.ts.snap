// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Snapshot 1`] = `
{
  "Conditions": {
    "teststackHasEcrPublic5CFB2179": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Partition",
        },
        "aws",
      ],
    },
  },
  "Description": "Blueprints tracking (qs-1s1r465hk)",
  "Outputs": {
    "crisiscleanupapisecretproviderclass": {
      "Value": "crisiscleanup-api",
    },
    "teststackClusterName14244830": {
      "Value": {
        "Ref": "teststackF0A1F222",
      },
    },
    "teststackConfigCommand2EAF39C9": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks update-kubeconfig --name ",
            {
              "Ref": "teststackF0A1F222",
            },
            " --region us-east-1 --role-arn ",
            {
              "Fn::GetAtt": [
                "teststackAccessRoleC011FEF1",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
    "teststackGetTokenCommandFA8F36E7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks get-token --cluster-name ",
            {
              "Ref": "teststackF0A1F222",
            },
            " --region us-east-1 --role-arn ",
            {
              "Fn::GetAtt": [
                "teststackAccessRoleC011FEF1",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": {
      "DependsOn": [
        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-us-east-1",
          "S3Key": "f7fc8760e0f3c8e0059c1fb08137d328a5e548dac0a4ba7927fae7839b92ea12.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": {
      "DependsOn": [
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-us-east-1",
          "S3Key": "a3f66c60067b06b5d9d00094e9e817ee39dd7cb5c315c8c254f5f3c571959ce5.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iam:CreateOpenIDConnectProvider",
                    "iam:DeleteOpenIDConnectProvider",
                    "iam:UpdateOpenIDConnectProviderThumbprint",
                    "iam:AddClientIDToOpenIDConnectProvider",
                    "iam:RemoveClientIDFromOpenIDConnectProvider",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.us-east-1.",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/cdk-hnb659fds-assets-1234567890-us-east-1/883c364cfcbd5b26d52dc7b714f3b67ef750d72d8c2342085f6208825c42ea58.json",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackKubectlHandlerRoleDefaultPolicy042F7760",
        "teststackKubectlHandlerRoleCD0E569C",
      ],
      "Properties": {
        "Parameters": {
          "referencetoteststackD4B9850DClusterSecurityGroupId": {
            "Fn::GetAtt": [
              "teststackF0A1F222",
              "ClusterSecurityGroupId",
            ],
          },
          "referencetoteststackKubectlHandlerRole7B69CAD7Arn": {
            "Fn::GetAtt": [
              "teststackKubectlHandlerRoleCD0E569C",
              "Arn",
            ],
          },
          "referencetoteststackteststackvpcPrivateSubnet1Subnet81882649Ref": {
            "Ref": "teststackvpcPrivateSubnet1SubnetF0331D8A",
          },
          "referencetoteststackteststackvpcPrivateSubnet2SubnetD4AC387FRef": {
            "Ref": "teststackvpcPrivateSubnet2Subnet3D907BDE",
          },
          "referencetoteststackteststackvpcPrivateSubnet3Subnet7C2B2C59Ref": {
            "Ref": "teststackvpcPrivateSubnet3Subnet04F192E1",
          },
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.us-east-1.",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/cdk-hnb659fds-assets-1234567890-us-east-1/a551315794e89024d8afb21e375b5de6611f8eb39b0aa39556562ec82836097c.json",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "awsebscsidriveraddOn": {
      "DependsOn": [
        "teststackchartawsloadbalancercontrollerF71AE295",
        "teststackebscsicontrollersasaConditionJson1DADB0FD",
        "teststackebscsicontrollersasamanifestebscsicontrollersasaServiceAccountResourceEF2D0DF9",
        "teststackebscsicontrollersasaRole1889A7DF",
      ],
      "Properties": {
        "AddonName": "aws-ebs-csi-driver",
        "AddonVersion": "v1.28.0-eksbuild.1",
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "ResolveConflicts": "OVERWRITE",
        "ServiceAccountRoleArn": {
          "Fn::GetAtt": [
            "teststackebscsicontrollersasaRole1889A7DF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::EKS::Addon",
    },
    "certmanagernamespacestruct65ED8E81": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"cert-manager\\",\\"labels\\":{\\"aws.cdk.eks/prune-c86596c8e9bc8e65068d4b3ee9fc9951d3e86bd491\\":\\"\\"}}}]",
        "Overwrite": true,
        "PruneLabel": "aws.cdk.eks/prune-c86596c8e9bc8e65068d4b3ee9fc9951d3e86bd491",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "corednsaddOn": {
      "DependsOn": [
        "teststackchartawsloadbalancercontrollerF71AE295",
      ],
      "Properties": {
        "AddonName": "coredns",
        "AddonVersion": "v1.10.1-eksbuild.2",
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "ConfigurationValues": "{}",
        "ResolveConflicts": "OVERWRITE",
      },
      "Type": "AWS::EKS::Addon",
    },
    "kubectllayer275BD88CD2": {
      "Properties": {
        "Content": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-us-east-1",
          "S3Key": "8e18eb5caccd2617fb76e648fa6a35dc0ece98c4681942bc6861f41afdff6a1b.zip",
        },
        "Description": "/opt/kubectl/kubectl 1.27; /opt/helm/helm 3.12",
        "LicenseInfo": "Apache-2.0",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "kubeproxyaddOn": {
      "DependsOn": [
        "teststackchartawsloadbalancercontrollerF71AE295",
      ],
      "Properties": {
        "AddonName": "kube-proxy",
        "AddonVersion": "v1.27.3-eksbuild.2",
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "ResolveConflicts": "OVERWRITE",
      },
      "Type": "AWS::EKS::Addon",
    },
    "testsecretF8BBC644": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "test-secret",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackAccessRoleC011FEF1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::1234567890:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "teststackAwsAuthmanifest8285D756": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"name\\":\\"aws-auth\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"aws.cdk.eks/prune-c8f4e0282059094b08ec2871abcbf3c1c3e3e6a85c\\":\\"\\"}},\\"data\\":{\\"mapRoles\\":\\"[{\\\\\\"rolearn\\\\\\":\\\\\\"",
              {
                "Fn::GetAtt": [
                  "teststackAccessRoleC011FEF1",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"",
              {
                "Fn::GetAtt": [
                  "teststackAccessRoleC011FEF1",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              {
                "Fn::GetAtt": [
                  "teststackfargateprofileserverlessPodExecutionRole05CC13EB",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{SessionName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\",\\\\\\"system:node-proxier\\\\\\"]}]\\",\\"mapUsers\\":\\"[]\\",\\"mapAccounts\\":\\"[]\\"}}]",
            ],
          ],
        },
        "Overwrite": true,
        "PruneLabel": "aws.cdk.eks/prune-c8f4e0282059094b08ec2871abcbf3c1c3e3e6a85c",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackControlPlaneSecurityGroup13815943": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "teststackCreationRole2F53ED2E": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                    "Outputs.teststackawscdkawseksClusterResourceProviderOnEventHandlerServiceRole1DA21CF7Arn",
                  ],
                },
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                    "Outputs.teststackawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRole88910E35Arn",
                  ],
                },
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "teststackKubectlHandlerRoleCD0E569C",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "teststackCreationRoleDefaultPolicyC627E923": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "teststackRole77C7D2C9",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:us-east-1:1234567890:cluster/test-stack",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:us-east-1:1234567890:cluster/test-stack/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":eks:us-east-1:1234567890:fargateprofile/test-stack/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "iam:GetRole",
                "iam:listAttachedRolePolicies",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:CreateGrant",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "teststackkmskey299A0BF4",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "teststackfargateprofileserverlessPodExecutionRole05CC13EB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "teststackCreationRoleDefaultPolicyC627E923",
        "Roles": [
          {
            "Ref": "teststackCreationRole2F53ED2E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "teststackF0A1F222": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackCreationRoleDefaultPolicyC627E923",
        "teststackCreationRole2F53ED2E",
      ],
      "Properties": {
        "AssumeRoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "AttributesRevision": 2,
        "Config": {
          "encryptionConfig": [
            {
              "provider": {
                "keyArn": {
                  "Fn::GetAtt": [
                    "teststackkmskey299A0BF4",
                    "Arn",
                  ],
                },
              },
              "resources": [
                "secrets",
              ],
            },
          ],
          "kubernetesNetworkConfig": {
            "ipFamily": "ipv4",
          },
          "name": "test-stack",
          "resourcesVpcConfig": {
            "endpointPrivateAccess": true,
            "endpointPublicAccess": true,
            "securityGroupIds": [
              {
                "Fn::GetAtt": [
                  "teststackControlPlaneSecurityGroup13815943",
                  "GroupId",
                ],
              },
            ],
            "subnetIds": [
              {
                "Ref": "teststackvpcPublicSubnet1Subnet98CD6475",
              },
              {
                "Ref": "teststackvpcPublicSubnet2SubnetDEE0C8F7",
              },
              {
                "Ref": "teststackvpcPublicSubnet3Subnet37390ED3",
              },
              {
                "Ref": "teststackvpcPrivateSubnet1SubnetF0331D8A",
              },
              {
                "Ref": "teststackvpcPrivateSubnet2Subnet3D907BDE",
              },
              {
                "Ref": "teststackvpcPrivateSubnet3Subnet04F192E1",
              },
            ],
          },
          "roleArn": {
            "Fn::GetAtt": [
              "teststackRole77C7D2C9",
              "Arn",
            ],
          },
          "version": "1.27",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.teststackawscdkawseksClusterResourceProviderframeworkonEventBBA9198BArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackKubectlHandlerRoleCD0E569C": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
          {
            "Fn::If": [
              "teststackHasEcrPublic5CFB2179",
              {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly",
                  ],
                ],
              },
              {
                "Ref": "AWS::NoValue",
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "teststackKubectlHandlerRoleDefaultPolicy042F7760": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "eks:DescribeCluster",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "teststackF0A1F222",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "teststackCreationRole2F53ED2E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "teststackKubectlHandlerRoleDefaultPolicy042F7760",
        "Roles": [
          {
            "Ref": "teststackKubectlHandlerRoleCD0E569C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "teststackKubectlReadyBarrier041D6F85": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackfargateprofileserverlessPodExecutionRole05CC13EB",
        "teststackfargateprofileserverless8C3BB3C4",
        "teststackCreationRoleDefaultPolicyC627E923",
        "teststackCreationRole2F53ED2E",
        "teststackF0A1F222",
      ],
      "Properties": {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "teststackOpenIdConnectProvider7B260D6E": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "ClientIDList": [
          "sts.amazonaws.com",
        ],
        "CodeHash": "a3f66c60067b06b5d9d00094e9e817ee39dd7cb5c315c8c254f5f3c571959ce5",
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
            "Arn",
          ],
        },
        "Url": {
          "Fn::GetAtt": [
            "teststackF0A1F222",
            "OpenIdConnectIssuerUrl",
          ],
        },
      },
      "Type": "Custom::AWSCDKOpenIdConnectProvider",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackRole77C7D2C9": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "teststackapi7BAC5B30": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackcelery5E8A92F0",
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": "[{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/name\\":\\"wsgi\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-wsgi\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"minReadySeconds\\":0,\\"progressDeadlineSeconds\\":600,\\"selector\\":{\\"matchLabels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-wsgi-c83e828d\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-wsgi-c83e828d\\"}},\\"spec\\":{\\"automountServiceAccountToken\\":false,\\"containers\\":[{\\"command\\":[\\"/serve.sh\\",\\"wsgi\\",\\"--workers=2\\",\\"--threads=4\\",\\"--worker-class=gthread\\",\\"--worker-tmp-dir=/worker-tmp\\",\\"--timeout=90\\"],\\"env\\":[{\\"name\\":\\"POSTGRES_USER\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_USER\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_PASSWORD\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_PASSWORD\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_HOST\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_HOST\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}}],\\"envFrom\\":[{\\"configMapRef\\":{\\"name\\":\\"crisiscleanup-config-api-config\\"}}],\\"image\\":\\"crisiscleanup-api:latest\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"livenessProbe\\":{\\"failureThreshold\\":6,\\"httpGet\\":{\\"path\\":\\"/health\\",\\"port\\":5000,\\"scheme\\":\\"HTTP\\"},\\"initialDelaySeconds\\":20,\\"periodSeconds\\":10,\\"timeoutSeconds\\":6},\\"name\\":\\"gunicorn\\",\\"ports\\":[{\\"containerPort\\":5000}],\\"readinessProbe\\":{\\"failureThreshold\\":6,\\"httpGet\\":{\\"path\\":\\"/health\\",\\"port\\":5000,\\"scheme\\":\\"HTTP\\"},\\"initialDelaySeconds\\":20,\\"periodSeconds\\":10,\\"timeoutSeconds\\":6},\\"resources\\":{\\"limits\\":{\\"memory\\":\\"1200Mi\\"},\\"requests\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"1200Mi\\"}},\\"securityContext\\":{\\"allowPrivilegeEscalation\\":false,\\"privileged\\":false,\\"readOnlyRootFilesystem\\":false,\\"runAsGroup\\":1000,\\"runAsNonRoot\\":true,\\"runAsUser\\":1000},\\"startupProbe\\":{\\"failureThreshold\\":30,\\"httpGet\\":{\\"path\\":\\"/health\\",\\"port\\":5000,\\"scheme\\":\\"HTTP\\"},\\"periodSeconds\\":15},\\"volumeMounts\\":[{\\"mountPath\\":\\"/app/staticfiles\\",\\"name\\":\\"staticfiles\\"},{\\"mountPath\\":\\"/worker-tmp\\",\\"name\\":\\"worker-tmp\\"},{\\"mountPath\\":\\"/mnt/secrets-store\\",\\"name\\":\\"secrets-store-inline\\",\\"readOnly\\":true}]}],\\"dnsPolicy\\":\\"ClusterFirst\\",\\"hostNetwork\\":false,\\"restartPolicy\\":\\"Always\\",\\"securityContext\\":{\\"fsGroupChangePolicy\\":\\"Always\\",\\"runAsNonRoot\\":true},\\"serviceAccountName\\":\\"crisiscleanup-api\\",\\"setHostnameAsFQDN\\":false,\\"terminationGracePeriodSeconds\\":30,\\"volumes\\":[{\\"emptyDir\\":{},\\"name\\":\\"staticfiles\\"},{\\"emptyDir\\":{\\"medium\\":\\"Memory\\"},\\"name\\":\\"worker-tmp\\"},{\\"csi\\":{\\"driver\\":\\"secrets-store.csi.k8s.io\\",\\"readOnly\\":true,\\"volumeAttributes\\":{\\"secretProviderClass\\":\\"crisiscleanup-api\\"}},\\"name\\":\\"secrets-store-inline\\"}]}}}},{\\"apiVersion\\":\\"batch/v1\\",\\"kind\\":\\"Job\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-wsgi-migrate\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"activeDeadlineSeconds\\":1800,\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-wsgi-migrate-c8890c80\\",\\"component\\":\\"api-migrate\\"}},\\"spec\\":{\\"automountServiceAccountToken\\":false,\\"containers\\":[{\\"command\\":[\\"python\\",\\"manage.py\\",\\"migrate\\",\\"--noinput\\",\\"--verbosity=1\\"],\\"env\\":[{\\"name\\":\\"POSTGRES_USER\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_USER\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_PASSWORD\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_PASSWORD\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_HOST\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_HOST\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}}],\\"envFrom\\":[{\\"configMapRef\\":{\\"name\\":\\"crisiscleanup-config-api-config\\"}}],\\"image\\":\\"crisiscleanup-api:latest\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"name\\":\\"migrate\\",\\"resources\\":{\\"limits\\":{\\"memory\\":\\"3072Mi\\"},\\"requests\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"1024Mi\\"}},\\"securityContext\\":{\\"allowPrivilegeEscalation\\":false,\\"privileged\\":false,\\"readOnlyRootFilesystem\\":false,\\"runAsGroup\\":1000,\\"runAsNonRoot\\":true,\\"runAsUser\\":1000},\\"volumeMounts\\":[{\\"mountPath\\":\\"/mnt/secrets-store\\",\\"name\\":\\"secrets-store-inline\\",\\"readOnly\\":true}]}],\\"dnsPolicy\\":\\"ClusterFirst\\",\\"hostNetwork\\":false,\\"restartPolicy\\":\\"Never\\",\\"securityContext\\":{\\"fsGroupChangePolicy\\":\\"Always\\",\\"runAsGroup\\":1000,\\"runAsNonRoot\\":true,\\"runAsUser\\":1000},\\"serviceAccountName\\":\\"crisiscleanup-api\\",\\"setHostnameAsFQDN\\":false,\\"terminationGracePeriodSeconds\\":300,\\"volumes\\":[{\\"csi\\":{\\"driver\\":\\"secrets-store.csi.k8s.io\\",\\"readOnly\\":true,\\"volumeAttributes\\":{\\"secretProviderClass\\":\\"crisiscleanup-api\\"}},\\"name\\":\\"secrets-store-inline\\"}]}},\\"ttlSecondsAfterFinished\\":120}},{\\"apiVersion\\":\\"batch/v1\\",\\"kind\\":\\"Job\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-wsgi-collectstatic\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"activeDeadlineSeconds\\":1800,\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-wsgi-collectstatic-c871685d\\",\\"component\\":\\"api-static\\"}},\\"spec\\":{\\"automountServiceAccountToken\\":false,\\"containers\\":[{\\"command\\":[\\"python\\",\\"manage.py\\",\\"collectstatic\\",\\"--no-post-process\\",\\"--noinput\\",\\"--verbosity=2\\"],\\"env\\":[{\\"name\\":\\"POSTGRES_USER\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_USER\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_PASSWORD\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_PASSWORD\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_HOST\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_HOST\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}}],\\"envFrom\\":[{\\"configMapRef\\":{\\"name\\":\\"crisiscleanup-config-api-config\\"}}],\\"image\\":\\"crisiscleanup-api:latest\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"name\\":\\"collectstatic\\",\\"resources\\":{\\"limits\\":{\\"memory\\":\\"3072Mi\\"},\\"requests\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"1024Mi\\"}},\\"securityContext\\":{\\"allowPrivilegeEscalation\\":false,\\"privileged\\":false,\\"readOnlyRootFilesystem\\":false,\\"runAsGroup\\":1000,\\"runAsNonRoot\\":true,\\"runAsUser\\":1000},\\"volumeMounts\\":[{\\"mountPath\\":\\"/app/staticfiles\\",\\"name\\":\\"staticfiles\\"},{\\"mountPath\\":\\"/mnt/secrets-store\\",\\"name\\":\\"secrets-store-inline\\",\\"readOnly\\":true}]}],\\"dnsPolicy\\":\\"ClusterFirst\\",\\"hostNetwork\\":false,\\"restartPolicy\\":\\"Never\\",\\"securityContext\\":{\\"fsGroupChangePolicy\\":\\"Always\\",\\"runAsGroup\\":1000,\\"runAsNonRoot\\":true,\\"runAsUser\\":1000},\\"serviceAccountName\\":\\"crisiscleanup-api\\",\\"setHostnameAsFQDN\\":false,\\"terminationGracePeriodSeconds\\":300,\\"volumes\\":[{\\"emptyDir\\":{},\\"name\\":\\"staticfiles\\"},{\\"csi\\":{\\"driver\\":\\"secrets-store.csi.k8s.io\\",\\"readOnly\\":true,\\"volumeAttributes\\":{\\"secretProviderClass\\":\\"crisiscleanup-api\\"}},\\"name\\":\\"secrets-store-inline\\"}]}},\\"ttlSecondsAfterFinished\\":120}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Service\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-wsgi-service\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"externalIPs\\":[],\\"ports\\":[{\\"port\\":5000,\\"targetPort\\":5000}],\\"selector\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-wsgi-c83e828d\\"},\\"type\\":\\"ClusterIP\\"}},{\\"apiVersion\\":\\"autoscaling/v2\\",\\"kind\\":\\"HorizontalPodAutoscaler\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-wsgi-hpa\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"behavior\\":{\\"scaleDown\\":{\\"policies\\":[{\\"periodSeconds\\":300,\\"type\\":\\"Pods\\",\\"value\\":1}],\\"selectPolicy\\":\\"Max\\",\\"stabilizationWindowSeconds\\":300},\\"scaleUp\\":{\\"policies\\":[{\\"periodSeconds\\":60,\\"type\\":\\"Pods\\",\\"value\\":4},{\\"periodSeconds\\":60,\\"type\\":\\"Percent\\",\\"value\\":200}],\\"selectPolicy\\":\\"Max\\",\\"stabilizationWindowSeconds\\":0}},\\"maxReplicas\\":3,\\"metrics\\":[{\\"resource\\":{\\"name\\":\\"cpu\\",\\"target\\":{\\"averageUtilization\\":70,\\"type\\":\\"Utilization\\"}},\\"type\\":\\"Resource\\"},{\\"resource\\":{\\"name\\":\\"memory\\",\\"target\\":{\\"averageUtilization\\":85,\\"type\\":\\"Utilization\\"}},\\"type\\":\\"Resource\\"}],\\"minReplicas\\":1,\\"scaleTargetRef\\":{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"name\\":\\"crisiscleanup-api-wsgi\\"}}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/name\\":\\"asgi\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-asgi\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"minReadySeconds\\":0,\\"progressDeadlineSeconds\\":600,\\"selector\\":{\\"matchLabels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-asgi-c818ff7e\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-asgi-c818ff7e\\"}},\\"spec\\":{\\"automountServiceAccountToken\\":false,\\"containers\\":[{\\"command\\":[\\"/serve.sh\\",\\"asgi\\",\\"--workers=2\\"],\\"env\\":[{\\"name\\":\\"POSTGRES_USER\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_USER\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_PASSWORD\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_PASSWORD\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_HOST\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_HOST\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}}],\\"envFrom\\":[{\\"configMapRef\\":{\\"name\\":\\"crisiscleanup-config-api-config\\"}}],\\"image\\":\\"crisiscleanup-api:latest\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"livenessProbe\\":{\\"failureThreshold\\":6,\\"httpGet\\":{\\"path\\":\\"/ws/health\\",\\"port\\":5000,\\"scheme\\":\\"HTTP\\"},\\"initialDelaySeconds\\":20,\\"periodSeconds\\":10,\\"timeoutSeconds\\":6},\\"name\\":\\"hypercorn\\",\\"ports\\":[{\\"containerPort\\":5000}],\\"readinessProbe\\":{\\"failureThreshold\\":6,\\"httpGet\\":{\\"path\\":\\"/ws/health\\",\\"port\\":5000,\\"scheme\\":\\"HTTP\\"},\\"initialDelaySeconds\\":20,\\"periodSeconds\\":10,\\"timeoutSeconds\\":6},\\"resources\\":{\\"limits\\":{\\"memory\\":\\"1024Mi\\"},\\"requests\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"1024Mi\\"}},\\"securityContext\\":{\\"allowPrivilegeEscalation\\":false,\\"privileged\\":false,\\"readOnlyRootFilesystem\\":false,\\"runAsGroup\\":1000,\\"runAsNonRoot\\":true,\\"runAsUser\\":1000},\\"startupProbe\\":{\\"failureThreshold\\":30,\\"httpGet\\":{\\"path\\":\\"/ws/health\\",\\"port\\":5000,\\"scheme\\":\\"HTTP\\"},\\"periodSeconds\\":15},\\"volumeMounts\\":[{\\"mountPath\\":\\"/mnt/secrets-store\\",\\"name\\":\\"secrets-store-inline\\",\\"readOnly\\":true}]}],\\"dnsPolicy\\":\\"ClusterFirst\\",\\"hostNetwork\\":false,\\"restartPolicy\\":\\"Always\\",\\"securityContext\\":{\\"fsGroupChangePolicy\\":\\"Always\\",\\"runAsNonRoot\\":true},\\"serviceAccountName\\":\\"crisiscleanup-api\\",\\"setHostnameAsFQDN\\":false,\\"terminationGracePeriodSeconds\\":30,\\"volumes\\":[{\\"csi\\":{\\"driver\\":\\"secrets-store.csi.k8s.io\\",\\"readOnly\\":true,\\"volumeAttributes\\":{\\"secretProviderClass\\":\\"crisiscleanup-api\\"}},\\"name\\":\\"secrets-store-inline\\"}]}}}},{\\"apiVersion\\":\\"storage.k8s.io/v1\\",\\"kind\\":\\"StorageClass\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"rag-models\\",\\"namespace\\":\\"local\\"},\\"parameters\\":{\\"allowAutoIOPSPerGBIncrease\\":\\"true\\",\\"iops\\":\\"1000\\",\\"type\\":\\"io2\\"},\\"provisioner\\":\\"ebs.csi.aws.com\\",\\"volumeBindingMode\\":\\"WaitForFirstConsumer\\"},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Service\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-asgi-asgi-rag-service\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"clusterIP\\":\\"None\\",\\"externalIPs\\":[],\\"ports\\":[{\\"name\\":\\"channels\\",\\"port\\":5000}],\\"selector\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-asgi-rag-c86cf6a6\\"},\\"type\\":\\"ClusterIP\\"}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"StatefulSet\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-asgi-rag\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"minReadySeconds\\":0,\\"podManagementPolicy\\":\\"OrderedReady\\",\\"selector\\":{\\"matchLabels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-asgi-rag-c86cf6a6\\"}},\\"serviceName\\":\\"crisiscleanup-api-asgi-asgi-rag-service\\",\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-asgi-rag-c86cf6a6\\"}},\\"spec\\":{\\"affinity\\":{\\"podAntiAffinity\\":{\\"requiredDuringSchedulingIgnoredDuringExecution\\":[{\\"labelSelector\\":{\\"matchLabels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-asgi-rag-c86cf6a6\\"}},\\"namespaces\\":[\\"local\\"],\\"topologyKey\\":\\"kubernetes.io/hostname\\"},{\\"labelSelector\\":{\\"matchLabels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-asgi-rag-c86cf6a6\\"}},\\"namespaces\\":[\\"local\\"],\\"topologyKey\\":\\"topology.kubernetes.io/zone\\"}]}},\\"automountServiceAccountToken\\":false,\\"containers\\":[{\\"command\\":[\\"/serve.sh\\",\\"channelsworker\\",\\"rag-document\\"],\\"env\\":[{\\"name\\":\\"POSTGRES_USER\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_USER\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_PASSWORD\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_PASSWORD\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_HOST\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_HOST\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}}],\\"envFrom\\":[{\\"configMapRef\\":{\\"name\\":\\"crisiscleanup-config-api-config\\"}}],\\"image\\":\\"crisiscleanup-api:latest\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"name\\":\\"rag-channels\\",\\"resources\\":{\\"limits\\":{\\"cpu\\":\\"3\\",\\"memory\\":\\"4096Mi\\"},\\"requests\\":{\\"cpu\\":\\"200m\\",\\"memory\\":\\"1024Mi\\"}},\\"securityContext\\":{\\"allowPrivilegeEscalation\\":false,\\"privileged\\":false,\\"readOnlyRootFilesystem\\":false,\\"runAsGroup\\":1000,\\"runAsNonRoot\\":true,\\"runAsUser\\":1000},\\"volumeMounts\\":[{\\"mountPath\\":\\"/ccu/nltk_data\\",\\"name\\":\\"rag-volume\\",\\"subPath\\":\\"nltk_data\\"},{\\"mountPath\\":\\"/ccu/.cache/huggingface\\",\\"name\\":\\"rag-volume\\",\\"subPath\\":\\"hf_data\\"},{\\"mountPath\\":\\"/ccu/.cache/matplotlib\\",\\"name\\":\\"rag-volume\\",\\"subPath\\":\\"mp_data\\"}]}],\\"dnsPolicy\\":\\"ClusterFirst\\",\\"hostNetwork\\":false,\\"initContainers\\":[{\\"command\\":[\\"sh\\",\\"-x\\",\\"-c\\",\\"mkdir -p /ccu && chown -R 1000:1000 /ccu\\"],\\"image\\":\\"public.ecr.aws/docker/library/busybox:stable\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"name\\":\\"host-mounts-init\\",\\"resources\\":{\\"limits\\":{\\"cpu\\":\\"30m\\",\\"memory\\":\\"50Mi\\"},\\"requests\\":{\\"cpu\\":\\"20m\\",\\"memory\\":\\"20Mi\\"}},\\"securityContext\\":{\\"allowPrivilegeEscalation\\":false,\\"privileged\\":false,\\"readOnlyRootFilesystem\\":false,\\"runAsGroup\\":0,\\"runAsNonRoot\\":false,\\"runAsUser\\":0},\\"volumeMounts\\":[{\\"mountPath\\":\\"/ccu/nltk_data\\",\\"name\\":\\"rag-volume\\",\\"subPath\\":\\"nltk_data\\"},{\\"mountPath\\":\\"/ccu/.cache/huggingface\\",\\"name\\":\\"rag-volume\\",\\"subPath\\":\\"hf_data\\"},{\\"mountPath\\":\\"/ccu/.cache/matplotlib\\",\\"name\\":\\"rag-volume\\",\\"subPath\\":\\"mp_data\\"}]}],\\"restartPolicy\\":\\"Always\\",\\"securityContext\\":{\\"fsGroupChangePolicy\\":\\"Always\\",\\"runAsNonRoot\\":true},\\"serviceAccountName\\":\\"crisiscleanup-api\\",\\"setHostnameAsFQDN\\":false,\\"terminationGracePeriodSeconds\\":30,\\"volumes\\":[{\\"csi\\":{\\"driver\\":\\"secrets-store.csi.k8s.io\\",\\"readOnly\\":true,\\"volumeAttributes\\":{\\"secretProviderClass\\":\\"crisiscleanup-api\\"}},\\"name\\":\\"secrets-store-inline\\"}]}},\\"updateStrategy\\":{\\"rollingUpdate\\":{\\"partition\\":0},\\"type\\":\\"RollingUpdate\\"},\\"volumeClaimTemplates\\":[{\\"metadata\\":{\\"name\\":\\"rag-volume\\"},\\"spec\\":{\\"accessModes\\":[\\"ReadWriteOnce\\"],\\"storageClassName\\":\\"rag-models\\",\\"resources\\":{\\"requests\\":{\\"storage\\":\\"10Gi\\"}}}}]}},{\\"apiVersion\\":\\"autoscaling/v2\\",\\"kind\\":\\"HorizontalPodAutoscaler\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-asgi-rag-scaling-hpa\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"behavior\\":{\\"scaleDown\\":{\\"policies\\":[{\\"periodSeconds\\":300,\\"type\\":\\"Pods\\",\\"value\\":1}],\\"selectPolicy\\":\\"Max\\",\\"stabilizationWindowSeconds\\":300},\\"scaleUp\\":{\\"policies\\":[{\\"periodSeconds\\":60,\\"type\\":\\"Pods\\",\\"value\\":4},{\\"periodSeconds\\":60,\\"type\\":\\"Percent\\",\\"value\\":200}],\\"selectPolicy\\":\\"Max\\",\\"stabilizationWindowSeconds\\":0}},\\"maxReplicas\\":6,\\"metrics\\":[{\\"resource\\":{\\"name\\":\\"cpu\\",\\"target\\":{\\"averageUtilization\\":50,\\"type\\":\\"Utilization\\"}},\\"type\\":\\"Resource\\"},{\\"resource\\":{\\"name\\":\\"memory\\",\\"target\\":{\\"averageUtilization\\":80,\\"type\\":\\"Utilization\\"}},\\"type\\":\\"Resource\\"}],\\"minReplicas\\":1,\\"scaleTargetRef\\":{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"StatefulSet\\",\\"name\\":\\"crisiscleanup-api-asgi-rag\\"}}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Service\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-asgi-service\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"externalIPs\\":[],\\"ports\\":[{\\"port\\":5000,\\"targetPort\\":5000}],\\"selector\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-asgi-c818ff7e\\"},\\"type\\":\\"ClusterIP\\"}},{\\"apiVersion\\":\\"autoscaling/v2\\",\\"kind\\":\\"HorizontalPodAutoscaler\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-asgi-hpa\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"behavior\\":{\\"scaleDown\\":{\\"policies\\":[{\\"periodSeconds\\":300,\\"type\\":\\"Pods\\",\\"value\\":1}],\\"selectPolicy\\":\\"Max\\",\\"stabilizationWindowSeconds\\":300},\\"scaleUp\\":{\\"policies\\":[{\\"periodSeconds\\":60,\\"type\\":\\"Pods\\",\\"value\\":4},{\\"periodSeconds\\":60,\\"type\\":\\"Percent\\",\\"value\\":200}],\\"selectPolicy\\":\\"Max\\",\\"stabilizationWindowSeconds\\":0}},\\"maxReplicas\\":2,\\"metrics\\":[{\\"resource\\":{\\"name\\":\\"cpu\\",\\"target\\":{\\"averageUtilization\\":70,\\"type\\":\\"Utilization\\"}},\\"type\\":\\"Resource\\"},{\\"resource\\":{\\"name\\":\\"memory\\",\\"target\\":{\\"averageUtilization\\":85,\\"type\\":\\"Utilization\\"}},\\"type\\":\\"Resource\\"}],\\"minReplicas\\":1,\\"scaleTargetRef\\":{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"name\\":\\"crisiscleanup-api-asgi\\"}}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b\\":\\"\\",\\"app.kubernetes.io/component\\":\\"api\\",\\"app.kubernetes.io/name\\":\\"adminwebsocket\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-api-admin-websocket\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"minReadySeconds\\":0,\\"progressDeadlineSeconds\\":600,\\"replicas\\":1,\\"selector\\":{\\"matchLabels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-admin-websocket-c879d9e4\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-api-admin-websocket-c879d9e4\\"}},\\"spec\\":{\\"automountServiceAccountToken\\":false,\\"containers\\":[{\\"command\\":[\\"/serve.sh\\",\\"adminwebsocket\\"],\\"env\\":[{\\"name\\":\\"POSTGRES_USER\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_USER\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_PASSWORD\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_PASSWORD\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_HOST\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_HOST\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}}],\\"envFrom\\":[{\\"configMapRef\\":{\\"name\\":\\"crisiscleanup-config-api-config\\"}}],\\"image\\":\\"crisiscleanup-api:latest\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"name\\":\\"adminwebsocket\\",\\"resources\\":{\\"limits\\":{\\"memory\\":\\"250Mi\\"},\\"requests\\":{\\"cpu\\":\\"3m\\",\\"memory\\":\\"250Mi\\"}},\\"securityContext\\":{\\"allowPrivilegeEscalation\\":false,\\"privileged\\":false,\\"readOnlyRootFilesystem\\":false,\\"runAsGroup\\":1000,\\"runAsNonRoot\\":true,\\"runAsUser\\":1000},\\"volumeMounts\\":[{\\"mountPath\\":\\"/mnt/secrets-store\\",\\"name\\":\\"secrets-store-inline\\",\\"readOnly\\":true}]}],\\"dnsPolicy\\":\\"ClusterFirst\\",\\"hostNetwork\\":false,\\"restartPolicy\\":\\"Always\\",\\"securityContext\\":{\\"fsGroupChangePolicy\\":\\"Always\\",\\"runAsNonRoot\\":true},\\"serviceAccountName\\":\\"crisiscleanup-api\\",\\"setHostnameAsFQDN\\":false,\\"terminationGracePeriodSeconds\\":30,\\"volumes\\":[{\\"csi\\":{\\"driver\\":\\"secrets-store.csi.k8s.io\\",\\"readOnly\\":true,\\"volumeAttributes\\":{\\"secretProviderClass\\":\\"crisiscleanup-api\\"}},\\"name\\":\\"secrets-store-inline\\"}]}}}}]",
        "PruneLabel": "aws.cdk.eks/prune-c82f78fa5f1261be46ff61475603c88ab5fa680f3b",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackawsebscsidrivermanagedpolicy5C660754": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "Description": "",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:CreateSnapshot",
                "ec2:AttachVolume",
                "ec2:DetachVolume",
                "ec2:ModifyVolume",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeInstances",
                "ec2:DescribeSnapshots",
                "ec2:DescribeTags",
                "ec2:DescribeVolumes",
                "ec2:DescribeVolumesModifications",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ec2:CreateTags",
              "Condition": {
                "StringEquals": {
                  "ec2:CreateAction": [
                    "CreateVolume",
                    "CreateSnapshot",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ec2:*:*:volume/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ec2:*:*:snapshot/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ec2:DeleteTags",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ec2:*:*:volume/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ec2:*:*:snapshot/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ec2:CreateVolume",
              "Condition": {
                "StringLike": {
                  "aws:RequestTag/ebs.csi.aws.com/cluster": "true",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ec2:CreateVolume",
              "Condition": {
                "StringLike": {
                  "aws:RequestTag/CSIVolumeName": "*",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ec2:CreateVolume",
              "Condition": {
                "StringLike": {
                  "aws:RequestTag/kubernetes.io/cluster/*": "owned",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ec2:DeleteVolume",
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/ebs.csi.aws.com/cluster": "true",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ec2:DeleteVolume",
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/CSIVolumeName": "*",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ec2:DeleteVolume",
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/kubernetes.io/cluster/*": "owned",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ec2:DeleteSnapshot",
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/CSIVolumeSnapshotName": "*",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ec2:DeleteSnapshot",
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/ebs.csi.aws.com/cluster": "true",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:ListGrants",
                "kms:RevokeGrant",
              ],
              "Condition": {
                "Bool": {
                  "kms:GrantIsForAWSResource": "true",
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "teststacktestebskeyKmsKey9F723E9C",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "teststacktestebskeyKmsKey9F723E9C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "teststackawsloadbalancercontrollerConditionJson572284EF": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": {
          "Fn::Join": [
            "",
            [
              "{\\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":oidc-provider/",
                      {
                        "Ref": "teststackOpenIdConnectProvider7B260D6E",
                      },
                    ],
                  },
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":oidc-provider/",
                      {
                        "Ref": "teststackOpenIdConnectProvider7B260D6E",
                      },
                    ],
                  },
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:aws-load-balancer-controller\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackawsloadbalancercontrollerRole8E40D7D2": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "Fn::GetAtt": [
                    "teststackawsloadbalancercontrollerConditionJson572284EF",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": {
                  "Ref": "teststackOpenIdConnectProvider7B260D6E",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "teststackawsloadbalancercontrollerRoleDefaultPolicyF5A83F84": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Condition": {
                "StringEquals": {
                  "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeTags",
                "ec2:GetCoipPoolUsage",
                "ec2:DescribeCoipPools",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:DescribeTags",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "cognito-idp:DescribeUserPoolClient",
                "acm:ListCertificates",
                "acm:DescribeCertificate",
                "iam:ListServerCertificates",
                "iam:GetServerCertificate",
                "waf-regional:GetWebACL",
                "waf-regional:GetWebACLForResource",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
                "wafv2:GetWebACL",
                "wafv2:GetWebACLForResource",
                "wafv2:AssociateWebACL",
                "wafv2:DisassociateWebACL",
                "shield:GetSubscriptionState",
                "shield:DescribeProtection",
                "shield:CreateProtection",
                "shield:DeleteProtection",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ec2:CreateSecurityGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ec2:CreateTags",
              "Condition": {
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "false",
                },
                "StringEquals": {
                  "ec2:CreateAction": "CreateSecurityGroup",
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:*:*:security-group/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ec2:CreateTags",
                "ec2:DeleteTags",
              ],
              "Condition": {
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false",
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:*:*:security-group/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:DeleteSecurityGroup",
              ],
              "Condition": {
                "Null": {
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateTargetGroup",
              ],
              "Condition": {
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "false",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:DeleteRule",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:RemoveTags",
              ],
              "Condition": {
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false",
                },
              },
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":elasticloadbalancing:*:*:targetgroup/*/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":elasticloadbalancing:*:*:loadbalancer/net/*/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":elasticloadbalancing:*:*:loadbalancer/app/*/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:RemoveTags",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":elasticloadbalancing:*:*:listener/net/*/*/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":elasticloadbalancing:*:*:listener/app/*/*/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:DeleteTargetGroup",
              ],
              "Condition": {
                "Null": {
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "elasticloadbalancing:AddTags",
              "Condition": {
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "false",
                },
                "StringEquals": {
                  "elasticloadbalancing:CreateAction": [
                    "CreateTargetGroup",
                    "CreateLoadBalancer",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":elasticloadbalancing:*:*:targetgroup/*/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":elasticloadbalancing:*:*:loadbalancer/net/*/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":elasticloadbalancing:*:*:loadbalancer/app/*/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:DeregisterTargets",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":elasticloadbalancing:*:*:targetgroup/*/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "elasticloadbalancing:SetWebAcl",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:ModifyRule",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "teststackawsloadbalancercontrollerRoleDefaultPolicyF5A83F84",
        "Roles": [
          {
            "Ref": "teststackawsloadbalancercontrollerRole8E40D7D2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "teststackawsloadbalancercontrollermanifestawsloadbalancercontrollerServiceAccountResource89C7F756": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"aws-load-balancer-controller\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"aws.cdk.eks/prune-c85853c78556b3c028985e04a49a153ed96e8b4a3d\\":\\"\\",\\"app.kubernetes.io/name\\":\\"aws-load-balancer-controller\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              {
                "Fn::GetAtt": [
                  "teststackawsloadbalancercontrollerRole8E40D7D2",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "PruneLabel": "aws.cdk.eks/prune-c85853c78556b3c028985e04a49a153ed96e8b4a3d",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackcelery5E8A92F0": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackconfig269E4FBB",
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": "[{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c8018c2be8cb5160e18a226ae9045eb81abe0e66ee\\":\\"\\",\\"app.kubernetes.io/component\\":\\"task-queue\\",\\"app.kubernetes.io/name\\":\\"celerybeat\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-celery-celerybeat\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"minReadySeconds\\":0,\\"progressDeadlineSeconds\\":600,\\"replicas\\":1,\\"selector\\":{\\"matchLabels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-celery-celerybeat-c8500419\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-celery-celerybeat-c8500419\\"}},\\"spec\\":{\\"automountServiceAccountToken\\":false,\\"containers\\":[{\\"command\\":[\\"/serve.sh\\",\\"celerybeat\\"],\\"env\\":[{\\"name\\":\\"POSTGRES_USER\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_USER\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_PASSWORD\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_PASSWORD\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_HOST\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_HOST\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}}],\\"envFrom\\":[{\\"configMapRef\\":{\\"name\\":\\"crisiscleanup-config-api-config\\"}}],\\"image\\":\\"crisiscleanup-api:latest\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"name\\":\\"celerybeat\\",\\"resources\\":{\\"limits\\":{\\"memory\\":\\"400Mi\\"},\\"requests\\":{\\"cpu\\":\\"20m\\",\\"memory\\":\\"400Mi\\"}},\\"securityContext\\":{\\"allowPrivilegeEscalation\\":false,\\"privileged\\":false,\\"readOnlyRootFilesystem\\":false,\\"runAsGroup\\":1000,\\"runAsNonRoot\\":true,\\"runAsUser\\":1000},\\"volumeMounts\\":[{\\"mountPath\\":\\"/mnt/secrets-store\\",\\"name\\":\\"secrets-store-inline\\",\\"readOnly\\":true}]}],\\"dnsPolicy\\":\\"ClusterFirst\\",\\"hostNetwork\\":false,\\"restartPolicy\\":\\"Always\\",\\"securityContext\\":{\\"fsGroupChangePolicy\\":\\"Always\\",\\"runAsNonRoot\\":true},\\"serviceAccountName\\":\\"crisiscleanup-api\\",\\"setHostnameAsFQDN\\":false,\\"terminationGracePeriodSeconds\\":30,\\"volumes\\":[{\\"csi\\":{\\"driver\\":\\"secrets-store.csi.k8s.io\\",\\"readOnly\\":true,\\"volumeAttributes\\":{\\"secretProviderClass\\":\\"crisiscleanup-api\\"}},\\"name\\":\\"secrets-store-inline\\"}]}}}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c8018c2be8cb5160e18a226ae9045eb81abe0e66ee\\":\\"\\",\\"app.kubernetes.io/component\\":\\"task-queue\\",\\"app.kubernetes.io/name\\":\\"celeryworker\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-celery-celery-celery\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"minReadySeconds\\":0,\\"progressDeadlineSeconds\\":600,\\"selector\\":{\\"matchLabels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-celery-celery-celery-c8528587\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-celery-celery-celery-c8528587\\"}},\\"spec\\":{\\"automountServiceAccountToken\\":false,\\"containers\\":[{\\"command\\":[\\"/serve.sh\\",\\"celeryworker\\",\\"-Q\\",\\"celery\\",\\"--concurrency=2\\",\\"--hostname\\",\\"celery@%%h\\"],\\"env\\":[{\\"name\\":\\"POSTGRES_USER\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_USER\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_PASSWORD\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_PASSWORD\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_HOST\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_HOST\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}}],\\"envFrom\\":[{\\"configMapRef\\":{\\"name\\":\\"crisiscleanup-config-api-config\\"}}],\\"image\\":\\"crisiscleanup-api:latest\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"name\\":\\"celery\\",\\"resources\\":{\\"limits\\":{\\"memory\\":\\"900Mi\\"},\\"requests\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"900Mi\\"}},\\"securityContext\\":{\\"allowPrivilegeEscalation\\":false,\\"privileged\\":false,\\"readOnlyRootFilesystem\\":false,\\"runAsGroup\\":1000,\\"runAsNonRoot\\":true,\\"runAsUser\\":1000},\\"volumeMounts\\":[{\\"mountPath\\":\\"/mnt/secrets-store\\",\\"name\\":\\"secrets-store-inline\\",\\"readOnly\\":true}]}],\\"dnsPolicy\\":\\"ClusterFirst\\",\\"hostNetwork\\":false,\\"restartPolicy\\":\\"Always\\",\\"securityContext\\":{\\"fsGroupChangePolicy\\":\\"Always\\",\\"runAsNonRoot\\":true},\\"serviceAccountName\\":\\"crisiscleanup-api\\",\\"setHostnameAsFQDN\\":false,\\"terminationGracePeriodSeconds\\":30,\\"volumes\\":[{\\"csi\\":{\\"driver\\":\\"secrets-store.csi.k8s.io\\",\\"readOnly\\":true,\\"volumeAttributes\\":{\\"secretProviderClass\\":\\"crisiscleanup-api\\"}},\\"name\\":\\"secrets-store-inline\\"}]}}}},{\\"apiVersion\\":\\"autoscaling/v2\\",\\"kind\\":\\"HorizontalPodAutoscaler\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c8018c2be8cb5160e18a226ae9045eb81abe0e66ee\\":\\"\\",\\"app.kubernetes.io/component\\":\\"task-queue\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-celery-celery-celery-hpa\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"behavior\\":{\\"scaleDown\\":{\\"policies\\":[{\\"periodSeconds\\":300,\\"type\\":\\"Pods\\",\\"value\\":1}],\\"selectPolicy\\":\\"Max\\",\\"stabilizationWindowSeconds\\":300},\\"scaleUp\\":{\\"policies\\":[{\\"periodSeconds\\":60,\\"type\\":\\"Pods\\",\\"value\\":4},{\\"periodSeconds\\":60,\\"type\\":\\"Percent\\",\\"value\\":200}],\\"selectPolicy\\":\\"Max\\",\\"stabilizationWindowSeconds\\":0}},\\"maxReplicas\\":2,\\"metrics\\":[{\\"resource\\":{\\"name\\":\\"cpu\\",\\"target\\":{\\"averageUtilization\\":70,\\"type\\":\\"Utilization\\"}},\\"type\\":\\"Resource\\"},{\\"resource\\":{\\"name\\":\\"memory\\",\\"target\\":{\\"averageUtilization\\":85,\\"type\\":\\"Utilization\\"}},\\"type\\":\\"Resource\\"}],\\"minReplicas\\":1,\\"scaleTargetRef\\":{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"name\\":\\"crisiscleanup-celery-celery-celery\\"}}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c8018c2be8cb5160e18a226ae9045eb81abe0e66ee\\":\\"\\",\\"app.kubernetes.io/component\\":\\"task-queue\\",\\"app.kubernetes.io/name\\":\\"celeryworker\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-celery-celery-signal\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"minReadySeconds\\":0,\\"progressDeadlineSeconds\\":600,\\"selector\\":{\\"matchLabels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-celery-celery-signal-c80f507d\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"cdk8s.io/metadata.addr\\":\\"crisiscleanup-celery-celery-signal-c80f507d\\"}},\\"spec\\":{\\"automountServiceAccountToken\\":false,\\"containers\\":[{\\"command\\":[\\"/serve.sh\\",\\"celeryworker\\",\\"-Q\\",\\"signal,phone,metrics\\",\\"--concurrency=2\\",\\"--hostname\\",\\"signal@%%h\\"],\\"env\\":[{\\"name\\":\\"POSTGRES_USER\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_USER\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_PASSWORD\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_PASSWORD\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}},{\\"name\\":\\"POSTGRES_HOST\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"POSTGRES_HOST\\",\\"name\\":\\"crisiscleanup-db-secrets\\"}}}],\\"envFrom\\":[{\\"configMapRef\\":{\\"name\\":\\"crisiscleanup-config-api-config\\"}}],\\"image\\":\\"crisiscleanup-api:latest\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"name\\":\\"signal\\",\\"resources\\":{\\"limits\\":{\\"memory\\":\\"900Mi\\"},\\"requests\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"900Mi\\"}},\\"securityContext\\":{\\"allowPrivilegeEscalation\\":false,\\"privileged\\":false,\\"readOnlyRootFilesystem\\":false,\\"runAsGroup\\":1000,\\"runAsNonRoot\\":true,\\"runAsUser\\":1000},\\"volumeMounts\\":[{\\"mountPath\\":\\"/mnt/secrets-store\\",\\"name\\":\\"secrets-store-inline\\",\\"readOnly\\":true}]}],\\"dnsPolicy\\":\\"ClusterFirst\\",\\"hostNetwork\\":false,\\"restartPolicy\\":\\"Always\\",\\"securityContext\\":{\\"fsGroupChangePolicy\\":\\"Always\\",\\"runAsNonRoot\\":true},\\"serviceAccountName\\":\\"crisiscleanup-api\\",\\"setHostnameAsFQDN\\":false,\\"terminationGracePeriodSeconds\\":30,\\"volumes\\":[{\\"csi\\":{\\"driver\\":\\"secrets-store.csi.k8s.io\\",\\"readOnly\\":true,\\"volumeAttributes\\":{\\"secretProviderClass\\":\\"crisiscleanup-api\\"}},\\"name\\":\\"secrets-store-inline\\"}]}}}},{\\"apiVersion\\":\\"autoscaling/v2\\",\\"kind\\":\\"HorizontalPodAutoscaler\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c8018c2be8cb5160e18a226ae9045eb81abe0e66ee\\":\\"\\",\\"app.kubernetes.io/component\\":\\"task-queue\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-celery-celery-signal-hpa\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"behavior\\":{\\"scaleDown\\":{\\"policies\\":[{\\"periodSeconds\\":300,\\"type\\":\\"Pods\\",\\"value\\":1}],\\"selectPolicy\\":\\"Max\\",\\"stabilizationWindowSeconds\\":300},\\"scaleUp\\":{\\"policies\\":[{\\"periodSeconds\\":60,\\"type\\":\\"Pods\\",\\"value\\":4},{\\"periodSeconds\\":60,\\"type\\":\\"Percent\\",\\"value\\":200}],\\"selectPolicy\\":\\"Max\\",\\"stabilizationWindowSeconds\\":0}},\\"maxReplicas\\":2,\\"metrics\\":[{\\"resource\\":{\\"name\\":\\"cpu\\",\\"target\\":{\\"averageUtilization\\":70,\\"type\\":\\"Utilization\\"}},\\"type\\":\\"Resource\\"},{\\"resource\\":{\\"name\\":\\"memory\\",\\"target\\":{\\"averageUtilization\\":85,\\"type\\":\\"Utilization\\"}},\\"type\\":\\"Resource\\"}],\\"minReplicas\\":1,\\"scaleTargetRef\\":{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"name\\":\\"crisiscleanup-celery-celery-signal\\"}}}]",
        "PruneLabel": "aws.cdk.eks/prune-c8018c2be8cb5160e18a226ae9045eb81abe0e66ee",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackchartSecretsStoreCSIDriverEEA704C9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "Chart": "secrets-store-csi-driver",
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "CreateNamespace": true,
        "Namespace": "kube-system",
        "Release": "blueprints-addon-secret-store-csi-driver",
        "Repository": "https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
        "Timeout": "900s",
        "Values": "{\\"grpcSupportedProviders\\":\\"aws\\",\\"syncSecret\\":{\\"enabled\\":\\"true\\"},\\"linux\\":{\\"affinity\\":{\\"nodeAffinity\\":{\\"requiredDuringSchedulingIgnoredDuringExecution\\":{\\"nodeSelectorTerms\\":[{\\"matchExpressions\\":[{\\"key\\":\\"eks.amazonaws.com/compute-type\\",\\"operator\\":\\"NotIn\\",\\"values\\":[\\"fargate\\"]}]}]}}}}}",
        "Version": "1.3.4",
        "Wait": true,
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackchartawsloadbalancercontrollerF71AE295": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackawsloadbalancercontrollerConditionJson572284EF",
        "teststackawsloadbalancercontrollermanifestawsloadbalancercontrollerServiceAccountResource89C7F756",
        "teststackawsloadbalancercontrollerRoleDefaultPolicyF5A83F84",
        "teststackawsloadbalancercontrollerRole8E40D7D2",
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "Chart": "aws-load-balancer-controller",
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "CreateNamespace": true,
        "Namespace": "kube-system",
        "Release": "aws-load-balancer-controller",
        "Repository": "https://aws.github.io/eks-charts",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
        "Values": {
          "Fn::Join": [
            "",
            [
              "{\\"clusterName\\":\\"",
              {
                "Ref": "teststackF0A1F222",
              },
              "\\",\\"serviceAccount\\":{\\"create\\":false,\\"name\\":\\"aws-load-balancer-controller\\"},\\"enableShield\\":false,\\"enableWaf\\":false,\\"enableWafv2\\":false,\\"createIngressClassResource\\":true,\\"ingressClass\\":\\"alb\\",\\"enableServiceMutatorWebhook\\":false,\\"region\\":\\"us-east-1\\",\\"image\\":{\\"repository\\":\\"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-load-balancer-controller\\"},\\"vpcId\\":\\"",
              {
                "Ref": "teststackvpcAF2EB73C",
              },
              "\\"}",
            ],
          ],
        },
        "Version": "1.6.0",
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackchartblueprintscertmanageraddonA3FC2F14": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "certmanagernamespacestruct65ED8E81",
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackchartawsloadbalancercontrollerF71AE295",
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "Chart": "cert-manager",
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "CreateNamespace": true,
        "Namespace": "cert-manager",
        "Release": "cert-manager",
        "Repository": "https://charts.jetstack.io",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
        "Values": "{\\"webhook\\":{\\"securePort\\":10260},\\"installCRDs\\":true}",
        "Version": "1.12.3",
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackchartmetricsserver34B7E84C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackchartawsloadbalancercontrollerF71AE295",
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "Chart": "metrics-server",
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "CreateNamespace": true,
        "Namespace": "kube-system",
        "Release": "blueprints-addon-metrics-server",
        "Repository": "https://kubernetes-sigs.github.io/metrics-server",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
        "Values": "{\\"chart\\":\\"metrics-server\\",\\"repository\\":\\"https://kubernetes-sigs.github.io/metrics-server\\",\\"version\\":\\"3.11.0\\",\\"release\\":\\"blueprints-addon-metrics-server\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\",\\"createNamespace\\":false}",
        "Version": "3.11.0",
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackconfig269E4FBB": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackKubectlReadyBarrier041D6F85",
        "teststackmanifestcrisiscleanupapiD14722AF",
        "teststacknamespace3377A8BC",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c894922d745398f980bcd5bcaf0491f9bf2732dc69\\":\\"\\",\\"app.kubernetes.io/component\\":\\"config\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-config-api-config\\",\\"namespace\\":\\"local\\"},\\"data\\":{\\"CCU_API_URL\\":\\"https://api.local.crisiscleanup.io\\",\\"CCU_FORCE_DOCKER\\":\\"true\\",\\"CCU_NEWRELIC_DISABLE\\":\\"true\\",\\"CCU_WEB_URL\\":\\"https://local.crisiscleanup.io\\",\\"CELERY_ALWAYS_EAGER\\":\\"false\\",\\"CONNECT_INSTANCE_ID\\":\\"\\",\\"DJANGO_ACCOUNT_ALLOW_REGISTRATION\\":\\"true\\",\\"DJANGO_ALLOWED_HOSTS\\":\\"*\\",\\"DJANGO_CORS_ORIGIN_WHITELIST\\":\\"https://local.crisiscleanup.io,https://app.local.crisiscleanup.io\\",\\"DJANGO_CSRF_COOKIE_SECURE\\":\\"true\\",\\"DJANGO_CSRF_TRUSTED_ORIGINS\\":\\"https://local.crisiscleanup.io,https://app.local.crisiscleanup.io\\",\\"DJANGO_EMAIL_BACKEND\\":\\"django.core.mail.backends.dummy.EmailBackend\\",\\"DJANGO_SECURE_SSL_REDIRECT\\":\\"false\\",\\"DJANGO_SESSION_COOKIE_SECURE\\":\\"true\\",\\"DJANGO_SETTINGS_MODULE\\":\\"config.settings.local\\",\\"ELASTIC_SEARCH_HOST\\":\\"\\",\\"NEW_RELIC_CONFIG_FILE\\":\\"/app/newrelic.ini\\",\\"PHONE_CHECK_TIMEZONE\\":\\"true\\",\\"SENTRY_TRACE_EXCLUDE_URLS\\":\\"/,/health,/health/,/ws/health,/ws/health/,/version,/version/,/{var}health/,/{var}version/\\"},\\"immutable\\":false}]",
        "PruneLabel": "aws.cdk.eks/prune-c894922d745398f980bcd5bcaf0491f9bf2732dc69",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackcrisiscleanup050BF9B9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackapi7BAC5B30",
        "teststackchartawsloadbalancercontrollerF71AE295",
        "teststackKubectlReadyBarrier041D6F85",
        "teststackmanifestSecretsStoreCsiDriverProviderAws9B659B7C",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": "[{\\"apiVersion\\":\\"networking.k8s.io/v1\\",\\"kind\\":\\"Ingress\\",\\"metadata\\":{\\"annotations\\":{\\"alb.ingress.kubernetes.io/healthcheck-path\\":\\"/health\\",\\"alb.ingress.kubernetes.io/listen-ports\\":\\"[{\\\\\\"HTTP\\\\\\": 80}, {\\\\\\"HTTPS\\\\\\":443}]\\",\\"alb.ingress.kubernetes.io/load-balancer-attributes\\":\\"idle_timeout.timeout_seconds=120\\",\\"alb.ingress.kubernetes.io/scheme\\":\\"internet-facing\\",\\"alb.ingress.kubernetes.io/ssl-redirect\\":\\"443\\",\\"alb.ingress.kubernetes.io/target-group-attributes\\":\\"load_balancing.algorithm.type=least_outstanding_requests\\",\\"alb.ingress.kubernetes.io/target-type\\":\\"ip\\"},\\"labels\\":{\\"aws.cdk.eks/prune-c8eeaa88da85c7962afda4f9f00ed8403c708d13e7\\":\\"\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\"},\\"name\\":\\"crisiscleanup-ingress\\",\\"namespace\\":\\"local\\"},\\"spec\\":{\\"rules\\":[{\\"host\\":\\"api.local.crisiscleanup.io\\",\\"http\\":{\\"paths\\":[{\\"backend\\":{\\"service\\":{\\"name\\":\\"crisiscleanup-api-wsgi-service\\",\\"port\\":{\\"number\\":5000}}},\\"path\\":\\"/\\",\\"pathType\\":\\"Prefix\\"},{\\"backend\\":{\\"service\\":{\\"name\\":\\"crisiscleanup-api-asgi-service\\",\\"port\\":{\\"number\\":5000}}},\\"path\\":\\"/ws/\\",\\"pathType\\":\\"Prefix\\"}]}}]}}]",
        "PruneLabel": "aws.cdk.eks/prune-c8eeaa88da85c7962afda4f9f00ed8403c708d13e7",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackcrisiscleanupapiConditionJson2D7D9C59": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststacknamespace3377A8BC",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": {
          "Fn::Join": [
            "",
            [
              "{\\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":oidc-provider/",
                      {
                        "Ref": "teststackOpenIdConnectProvider7B260D6E",
                      },
                    ],
                  },
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":oidc-provider/",
                      {
                        "Ref": "teststackOpenIdConnectProvider7B260D6E",
                      },
                    ],
                  },
                ],
              },
              ":sub\\":\\"system:serviceaccount:local:crisiscleanup-api\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackcrisiscleanupapiRole2B1C760A": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststacknamespace3377A8BC",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "Fn::GetAtt": [
                    "teststackcrisiscleanupapiConditionJson2D7D9C59",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": {
                  "Ref": "teststackOpenIdConnectProvider7B260D6E",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "teststackcrisiscleanupapiRoleDefaultPolicy165116E1": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststacknamespace3377A8BC",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:us-east-1:1234567890:secret:test-name-??????",
                  ],
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "testsecretF8BBC644",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "teststackcrisiscleanupapiRoleDefaultPolicy165116E1",
        "Roles": [
          {
            "Ref": "teststackcrisiscleanupapiRole2B1C760A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "teststackcrisiscleanupapimanifestcrisiscleanupapiServiceAccountResourceC00AB8E9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackKubectlReadyBarrier041D6F85",
        "teststacknamespace3377A8BC",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"crisiscleanup-api\\",\\"namespace\\":\\"local\\",\\"labels\\":{\\"aws.cdk.eks/prune-c853655a7f7e609874acf7313eae6164c1f45fdb28\\":\\"\\",\\"app.kubernetes.io/name\\":\\"crisiscleanup-api\\",\\"app.kubernetes.io/app\\":\\"crisiscleanup\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              {
                "Fn::GetAtt": [
                  "teststackcrisiscleanupapiRole2B1C760A",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "PruneLabel": "aws.cdk.eks/prune-c853655a7f7e609874acf7313eae6164c1f45fdb28",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackebscsicontrollersasaConditionJson1DADB0FD": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": {
          "Fn::Join": [
            "",
            [
              "{\\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":oidc-provider/",
                      {
                        "Ref": "teststackOpenIdConnectProvider7B260D6E",
                      },
                    ],
                  },
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":oidc-provider/",
                      {
                        "Ref": "teststackOpenIdConnectProvider7B260D6E",
                      },
                    ],
                  },
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:ebs-csi-controller-sa\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackebscsicontrollersasaRole1889A7DF": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "Fn::GetAtt": [
                    "teststackebscsicontrollersasaConditionJson1DADB0FD",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": {
                  "Ref": "teststackOpenIdConnectProvider7B260D6E",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Ref": "teststackawsebscsidrivermanagedpolicy5C660754",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "teststackebscsicontrollersasamanifestebscsicontrollersasaServiceAccountResourceEF2D0DF9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"aws.cdk.eks/prune-c83caeeeb11246c51d87ee02376282450e4ef2bbfa\\":\\"\\",\\"app.kubernetes.io/name\\":\\"ebs-csi-controller-sa\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              {
                "Fn::GetAtt": [
                  "teststackebscsicontrollersasaRole1889A7DF",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "PruneLabel": "aws.cdk.eks/prune-c83caeeeb11246c51d87ee02376282450e4ef2bbfa",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackfargateprofileserverless8C3BB3C4": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "AssumeRoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "Config": {
          "clusterName": {
            "Ref": "teststackF0A1F222",
          },
          "podExecutionRoleArn": {
            "Fn::GetAtt": [
              "teststackfargateprofileserverlessPodExecutionRole05CC13EB",
              "Arn",
            ],
          },
          "selectors": [
            {
              "namespace": "karpenter",
            },
            {
              "namespace": "cert-manager",
            },
          ],
          "subnets": [
            {
              "Ref": "teststackvpcPrivateSubnet1SubnetF0331D8A",
            },
            {
              "Ref": "teststackvpcPrivateSubnet2Subnet3D907BDE",
            },
            {
              "Ref": "teststackvpcPrivateSubnet3Subnet04F192E1",
            },
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.teststackawscdkawseksClusterResourceProviderframeworkonEventBBA9198BArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-FargateProfile",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackfargateprofileserverlessPodExecutionRole05CC13EB": {
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks-fargate-pods.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "teststackkmskey299A0BF4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "Key for EKS Cluster 'test-stack'",
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::1234567890:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "teststackmanifestSecretsStoreCsiDriverProviderAws9B659B7C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackchartSecretsStoreCSIDriverEEA704C9",
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"csi-secrets-store-provider-aws\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"aws.cdk.eks/prune-c873200ebe732b00a6555daa115b176b31325a4f00\\":\\"\\"}}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"csi-secrets-store-provider-aws-cluster-role\\",\\"labels\\":{\\"aws.cdk.eks/prune-c873200ebe732b00a6555daa115b176b31325a4f00\\":\\"\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"serviceaccounts/token\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"serviceaccounts\\"],\\"verbs\\":[\\"get\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\"],\\"verbs\\":[\\"get\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"get\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"csi-secrets-store-provider-aws-cluster-rolebinding\\",\\"labels\\":{\\"aws.cdk.eks/prune-c873200ebe732b00a6555daa115b176b31325a4f00\\":\\"\\"}},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"csi-secrets-store-provider-aws-cluster-role\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"csi-secrets-store-provider-aws\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"DaemonSet\\",\\"metadata\\":{\\"namespace\\":\\"kube-system\\",\\"name\\":\\"csi-secrets-store-provider-aws\\",\\"labels\\":{\\"aws.cdk.eks/prune-c873200ebe732b00a6555daa115b176b31325a4f00\\":\\"\\",\\"app\\":\\"csi-secrets-store-provider-aws\\"}},\\"spec\\":{\\"updateStrategy\\":{\\"type\\":\\"RollingUpdate\\"},\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"csi-secrets-store-provider-aws\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"csi-secrets-store-provider-aws\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"csi-secrets-store-provider-aws\\",\\"hostNetwork\\":false,\\"containers\\":[{\\"name\\":\\"provider-aws-installer\\",\\"image\\":\\"public.ecr.aws/aws-secrets-manager/secrets-store-csi-driver-provider-aws:1.0.r2-68-gab548b3-2024.03.20.21.58\\",\\"imagePullPolicy\\":\\"Always\\",\\"args\\":[\\"--provider-volume=/etc/kubernetes/secrets-store-csi-providers\\"],\\"resources\\":{\\"requests\\":{\\"cpu\\":\\"50m\\",\\"memory\\":\\"100Mi\\"},\\"limits\\":{\\"cpu\\":\\"50m\\",\\"memory\\":\\"100Mi\\"}},\\"securityContext\\":{\\"privileged\\":false,\\"allowPrivilegeEscalation\\":false},\\"volumeMounts\\":[{\\"mountPath\\":\\"/etc/kubernetes/secrets-store-csi-providers\\",\\"name\\":\\"providervol\\"},{\\"name\\":\\"mountpoint-dir\\",\\"mountPath\\":\\"/var/lib/kubelet/pods\\",\\"mountPropagation\\":\\"HostToContainer\\"}]}],\\"volumes\\":[{\\"name\\":\\"providervol\\",\\"hostPath\\":{\\"path\\":\\"/etc/kubernetes/secrets-store-csi-providers\\"}},{\\"name\\":\\"mountpoint-dir\\",\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet/pods\\",\\"type\\":\\"DirectoryOrCreate\\"}}],\\"nodeSelector\\":{\\"kubernetes.io/os\\":\\"linux\\"}}}}}]",
        "PruneLabel": "aws.cdk.eks/prune-c873200ebe732b00a6555daa115b176b31325a4f00",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackmanifestcrisiscleanupapiD14722AF": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackcrisiscleanupapiConditionJson2D7D9C59",
        "teststackcrisiscleanupapimanifestcrisiscleanupapiServiceAccountResourceC00AB8E9",
        "teststackcrisiscleanupapiRoleDefaultPolicy165116E1",
        "teststackcrisiscleanupapiRole2B1C760A",
        "teststackKubectlReadyBarrier041D6F85",
        "teststackmanifestSecretsStoreCsiDriverProviderAws9B659B7C",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\\"apiVersion\\":\\"secrets-store.csi.x-k8s.io/v1alpha1\\",\\"kind\\":\\"SecretProviderClass\\",\\"metadata\\":{\\"name\\":\\"crisiscleanup-api\\",\\"namespace\\":\\"local\\",\\"labels\\":{\\"aws.cdk.eks/prune-c8d3d8345fdc8f44758b9c93a8243c01470109e86b\\":\\"\\"}},\\"spec\\":{\\"provider\\":\\"aws\\",\\"parameters\\":{\\"objects\\":\\"[{\\\\\\"objectName\\\\\\":\\\\\\"test-name\\\\\\",\\\\\\"objectType\\\\\\":\\\\\\"secretsmanager\\\\\\",\\\\\\"jmesPath\\\\\\":[]},{\\\\\\"objectName\\\\\\":\\\\\\"",
              {
                "Fn::Join": [
                  "-",
                  [
                    {
                      "Fn::Select": [
                        0,
                        {
                          "Fn::Split": [
                            "-",
                            {
                              "Fn::Select": [
                                6,
                                {
                                  "Fn::Split": [
                                    ":",
                                    {
                                      "Ref": "testsecretF8BBC644",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    {
                      "Fn::Select": [
                        1,
                        {
                          "Fn::Split": [
                            "-",
                            {
                              "Fn::Select": [
                                6,
                                {
                                  "Fn::Split": [
                                    ":",
                                    {
                                      "Ref": "testsecretF8BBC644",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
              "\\\\\\",\\\\\\"objectType\\\\\\":\\\\\\"secretsmanager\\\\\\",\\\\\\"jmesPath\\\\\\":[{\\\\\\"path\\\\\\":\\\\\\"username\\\\\\",\\\\\\"objectAlias\\\\\\":\\\\\\"POSTGRES_USER\\\\\\"},{\\\\\\"path\\\\\\":\\\\\\"password\\\\\\",\\\\\\"objectAlias\\\\\\":\\\\\\"POSTGRES_PASSWORD\\\\\\"},{\\\\\\"path\\\\\\":\\\\\\"host\\\\\\",\\\\\\"objectAlias\\\\\\":\\\\\\"POSTGRES_HOST\\\\\\"}]}]\\"},\\"secretObjects\\":[{\\"secretName\\":\\"crisiscleanup-api-secrets\\",\\"type\\":\\"Opaque\\",\\"data\\":[]},{\\"secretName\\":\\"crisiscleanup-db-secrets\\",\\"type\\":\\"Opaque\\",\\"data\\":[{\\"objectName\\":\\"POSTGRES_USER\\",\\"key\\":\\"POSTGRES_USER\\"},{\\"objectName\\":\\"POSTGRES_PASSWORD\\",\\"key\\":\\"POSTGRES_PASSWORD\\"},{\\"objectName\\":\\"POSTGRES_HOST\\",\\"key\\":\\"POSTGRES_HOST\\"}]}]}}]",
            ],
          ],
        },
        "PruneLabel": "aws.cdk.eks/prune-c8d3d8345fdc8f44758b9c93a8243c01470109e86b",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "teststacknamespace3377A8BC": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "teststackvpcIGW03B105E6",
        "teststackvpcPrivateSubnet1DefaultRouteD98CD628",
        "teststackvpcPrivateSubnet1RouteTable73100B52",
        "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F",
        "teststackvpcPrivateSubnet1SubnetF0331D8A",
        "teststackvpcPrivateSubnet2DefaultRoute134E1612",
        "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9",
        "teststackvpcPrivateSubnet2Subnet3D907BDE",
        "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD",
        "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0",
        "teststackvpcPrivateSubnet3Subnet04F192E1",
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1EIPD9571571",
        "teststackvpcPublicSubnet1NATGateway69A82078",
        "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
        "teststackvpcPublicSubnet1Subnet98CD6475",
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2EIP2A9F3E46",
        "teststackvpcPublicSubnet2NATGateway03687D6F",
        "teststackvpcPublicSubnet2RouteTable58C7856E",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
        "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3EIP67D3B36B",
        "teststackvpcPublicSubnet3NATGateway47881F6D",
        "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
        "teststackvpcPublicSubnet3Subnet37390ED3",
        "teststackvpcAF2EB73C",
        "teststackvpcVPCGW05B02F5B",
        "teststackKubectlReadyBarrier041D6F85",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"labels\\":{\\"aws.cdk.eks/prune-c8f1c7f4c5e37406ccc911c31308a38280bc792d4b\\":\\"\\",\\"app.kubernetes.io/part-of\\":\\"crisiscleanup\\",\\"elbv2.k8s.aws/pod-readiness-gate-inject\\":\\"enabled\\"},\\"name\\":\\"local\\",\\"namespace\\":\\"local\\"},\\"spec\\":{}}]",
        "PruneLabel": "aws.cdk.eks/prune-c8f1c7f4c5e37406ccc911c31308a38280bc792d4b",
        "RoleArn": {
          "Fn::GetAtt": [
            "teststackCreationRole2F53ED2E",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.teststackawscdkawseksKubectlProviderframeworkonEventA7D3599FArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "teststacktestebskeyKmsKey9F723E9C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "Key for EKS Cluster 'test-stack'",
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::1234567890:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "teststacktestebskeyKmsKeyAliasCBADC126": {
      "Properties": {
        "AliasName": "alias/test-ebs-key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "teststacktestebskeyKmsKey9F723E9C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "teststackvpcAF2EB73C": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "teststackvpcIGW03B105E6": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "teststackvpcPrivateSubnet1DefaultRouteD98CD628": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "teststackvpcPublicSubnet1NATGateway69A82078",
        },
        "RouteTableId": {
          "Ref": "teststackvpcPrivateSubnet1RouteTable73100B52",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "teststackvpcPrivateSubnet1RouteTable73100B52": {
      "Properties": {
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "teststackvpcPrivateSubnet1RouteTableAssociation3900E69F": {
      "Properties": {
        "RouteTableId": {
          "Ref": "teststackvpcPrivateSubnet1RouteTable73100B52",
        },
        "SubnetId": {
          "Ref": "teststackvpcPrivateSubnet1SubnetF0331D8A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "teststackvpcPrivateSubnet1SubnetF0331D8A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "teststackvpcPrivateSubnet2DefaultRoute134E1612": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "teststackvpcPublicSubnet2NATGateway03687D6F",
        },
        "RouteTableId": {
          "Ref": "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "teststackvpcPrivateSubnet2RouteTable3A43C01B": {
      "Properties": {
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "teststackvpcPrivateSubnet2RouteTableAssociation425F10F9": {
      "Properties": {
        "RouteTableId": {
          "Ref": "teststackvpcPrivateSubnet2RouteTable3A43C01B",
        },
        "SubnetId": {
          "Ref": "teststackvpcPrivateSubnet2Subnet3D907BDE",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "teststackvpcPrivateSubnet2Subnet3D907BDE": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "teststackvpcPrivateSubnet3DefaultRoute9B3E87CD": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "teststackvpcPublicSubnet3NATGateway47881F6D",
        },
        "RouteTableId": {
          "Ref": "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "teststackvpcPrivateSubnet3RouteTableAssociation9E2AFFF0": {
      "Properties": {
        "RouteTableId": {
          "Ref": "teststackvpcPrivateSubnet3RouteTableEE6C9D04",
        },
        "SubnetId": {
          "Ref": "teststackvpcPrivateSubnet3Subnet04F192E1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "teststackvpcPrivateSubnet3RouteTableEE6C9D04": {
      "Properties": {
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "teststackvpcPrivateSubnet3Subnet04F192E1": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "teststackvpcPublicSubnet1DefaultRoute559FCEC5": {
      "DependsOn": [
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "teststackvpcIGW03B105E6",
        },
        "RouteTableId": {
          "Ref": "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "teststackvpcPublicSubnet1EIPD9571571": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "teststackvpcPublicSubnet1NATGateway69A82078": {
      "DependsOn": [
        "teststackvpcPublicSubnet1DefaultRoute559FCEC5",
        "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "teststackvpcPublicSubnet1EIPD9571571",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "teststackvpcPublicSubnet1Subnet98CD6475",
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "teststackvpcPublicSubnet1RouteTable4A6F7D68": {
      "Properties": {
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "teststackvpcPublicSubnet1RouteTableAssociation6F4CDBB8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "teststackvpcPublicSubnet1RouteTable4A6F7D68",
        },
        "SubnetId": {
          "Ref": "teststackvpcPublicSubnet1Subnet98CD6475",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "teststackvpcPublicSubnet1Subnet98CD6475": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "teststackvpcPublicSubnet2DefaultRoute6D4EE093": {
      "DependsOn": [
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "teststackvpcIGW03B105E6",
        },
        "RouteTableId": {
          "Ref": "teststackvpcPublicSubnet2RouteTable58C7856E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "teststackvpcPublicSubnet2EIP2A9F3E46": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "teststackvpcPublicSubnet2NATGateway03687D6F": {
      "DependsOn": [
        "teststackvpcPublicSubnet2DefaultRoute6D4EE093",
        "teststackvpcPublicSubnet2RouteTableAssociationE029BF04",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "teststackvpcPublicSubnet2EIP2A9F3E46",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "teststackvpcPublicSubnet2RouteTable58C7856E": {
      "Properties": {
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "teststackvpcPublicSubnet2RouteTableAssociationE029BF04": {
      "Properties": {
        "RouteTableId": {
          "Ref": "teststackvpcPublicSubnet2RouteTable58C7856E",
        },
        "SubnetId": {
          "Ref": "teststackvpcPublicSubnet2SubnetDEE0C8F7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "teststackvpcPublicSubnet2SubnetDEE0C8F7": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "teststackvpcPublicSubnet3DefaultRoute7B38571F": {
      "DependsOn": [
        "teststackvpcVPCGW05B02F5B",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "teststackvpcIGW03B105E6",
        },
        "RouteTableId": {
          "Ref": "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "teststackvpcPublicSubnet3EIP67D3B36B": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "teststackvpcPublicSubnet3NATGateway47881F6D": {
      "DependsOn": [
        "teststackvpcPublicSubnet3DefaultRoute7B38571F",
        "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "teststackvpcPublicSubnet3EIP67D3B36B",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "teststackvpcPublicSubnet3Subnet37390ED3",
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "teststackvpcPublicSubnet3RouteTable5DB46CC9": {
      "Properties": {
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "teststackvpcPublicSubnet3RouteTableAssociation24AA1DD0": {
      "Properties": {
        "RouteTableId": {
          "Ref": "teststackvpcPublicSubnet3RouteTable5DB46CC9",
        },
        "SubnetId": {
          "Ref": "teststackvpcPublicSubnet3Subnet37390ED3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "teststackvpcPublicSubnet3Subnet37390ED3": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test-stack/test-stack-vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "teststackvpcVPCGW05B02F5B": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "teststackvpcIGW03B105E6",
        },
        "VpcId": {
          "Ref": "teststackvpcAF2EB73C",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "vpccniaddOn": {
      "DependsOn": [
        "teststackchartawsloadbalancercontrollerF71AE295",
      ],
      "Properties": {
        "AddonName": "vpc-cni",
        "AddonVersion": "v1.13.3-eksbuild.1",
        "ClusterName": {
          "Ref": "teststackF0A1F222",
        },
        "ConfigurationValues": "{\\"env\\":{\\"ENABLE_PREFIX_DELEGATION\\":\\"true\\"}}",
        "ResolveConflicts": "OVERWRITE",
      },
      "Type": "AWS::EKS::Addon",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
